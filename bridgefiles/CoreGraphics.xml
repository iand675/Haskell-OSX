<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/IOSurface.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<struct type='{CGAffineTransform=&quot;a&quot;f&quot;b&quot;f&quot;c&quot;f&quot;d&quot;f&quot;tx&quot;f&quot;ty&quot;f}' type64='{CGAffineTransform=&quot;a&quot;d&quot;b&quot;d&quot;c&quot;d&quot;d&quot;d&quot;tx&quot;d&quot;ty&quot;d}' name='CGAffineTransform'/>
<struct type='{CGDataConsumerCallbacks=&quot;putBytes&quot;^?&quot;releaseConsumer&quot;^?}' name='CGDataConsumerCallbacks'/>
<struct type='{CGDataProviderCallbacks=&quot;getBytes&quot;^?&quot;skipBytes&quot;^?&quot;rewind&quot;^?&quot;releaseProvider&quot;^?}' name='CGDataProviderCallbacks'/>
<struct type='{CGDataProviderDirectAccessCallbacks=&quot;getBytePointer&quot;^?&quot;releaseBytePointer&quot;^?&quot;getBytes&quot;^?&quot;releaseProvider&quot;^?}' name='CGDataProviderDirectAccessCallbacks'/>
<struct type='{CGDataProviderDirectCallbacks=&quot;version&quot;I&quot;getBytePointer&quot;^?&quot;releaseBytePointer&quot;^?&quot;getBytesAtPosition&quot;^?&quot;releaseInfo&quot;^?}' name='CGDataProviderDirectCallbacks'/>
<struct type='{CGDataProviderSequentialCallbacks=&quot;version&quot;I&quot;getBytes&quot;^?&quot;skipForward&quot;^?&quot;rewind&quot;^?&quot;releaseInfo&quot;^?}' name='CGDataProviderSequentialCallbacks'/>
<struct type='{CGDeviceByteColor=&quot;red&quot;C&quot;green&quot;C&quot;blue&quot;C}' name='CGDeviceByteColor'/>
<struct type='{CGDeviceColor=&quot;red&quot;f&quot;green&quot;f&quot;blue&quot;f}' name='CGDeviceColor'/>
<struct type='{__CGEventTapInformation=&quot;eventTapID&quot;I&quot;tapPoint&quot;I&quot;options&quot;I&quot;eventsOfInterest&quot;Q&quot;tappingProcess&quot;i&quot;processBeingTapped&quot;i&quot;enabled&quot;B&quot;minUsecLatency&quot;f&quot;avgUsecLatency&quot;f&quot;maxUsecLatency&quot;f}' name='CGEventTapInformation'/>
<struct type='{CGFunctionCallbacks=&quot;version&quot;I&quot;evaluate&quot;^?&quot;releaseInfo&quot;^?}' name='CGFunctionCallbacks'/>
<struct type='{CGPSConverterCallbacks=&quot;version&quot;I&quot;beginDocument&quot;^?&quot;endDocument&quot;^?&quot;beginPage&quot;^?&quot;endPage&quot;^?&quot;noteProgress&quot;^?&quot;noteMessage&quot;^?&quot;releaseInfo&quot;^?}' name='CGPSConverterCallbacks'/>
<struct type='{CGPathElement=&quot;type&quot;i&quot;points&quot;^{CGPoint}}' name='CGPathElement'/>
<struct type='{CGPatternCallbacks=&quot;version&quot;I&quot;drawPattern&quot;^?&quot;releaseInfo&quot;^?}' name='CGPatternCallbacks'/>
<struct type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' name='CGPoint'/>
<struct type='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}' type64='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;size&quot;{CGSize=&quot;width&quot;d&quot;height&quot;d}}' name='CGRect'/>
<struct type='{CGScreenUpdateMoveDelta=&quot;dX&quot;i&quot;dY&quot;i}' name='CGScreenUpdateMoveDelta'/>
<struct type='{CGSize=&quot;width&quot;f&quot;height&quot;f}' type64='{CGSize=&quot;width&quot;d&quot;height&quot;d}' name='CGSize'/>
<cftype type='^{CGColor=}' tollfree='__NSCFType' name='CGColorRef' gettypeid_func='CGColorGetTypeID'/>
<cftype type='^{CGColorSpace=}' tollfree='__NSCFType' name='CGColorSpaceRef' gettypeid_func='CGColorSpaceGetTypeID'/>
<cftype type='^{CGContext=}' tollfree='__NSCFType' name='CGContextRef' gettypeid_func='CGContextGetTypeID'/>
<cftype type='^{CGDataConsumer=}' tollfree='__NSCFType' name='CGDataConsumerRef' gettypeid_func='CGDataConsumerGetTypeID'/>
<cftype type='^{CGDataProvider=}' tollfree='__NSCFType' name='CGDataProviderRef' gettypeid_func='CGDataProviderGetTypeID'/>
<cftype type='^{_CGDirectPaletteRef=}' name='CGDirectPaletteRef'/>
<cftype type='^{_CGDisplayConfigRef=}' name='CGDisplayConfigRef'/>
<cftype type='^{CGDisplayMode=}' tollfree='__NSCFType' name='CGDisplayModeRef' gettypeid_func='CGDisplayModeGetTypeID'/>
<cftype type='^{__CGEvent=}' tollfree='__NSCFType' name='CGEventRef' gettypeid_func='CGEventGetTypeID'/>
<cftype type='^{__CGEventSource=}' tollfree='__NSCFType' name='CGEventSourceRef' gettypeid_func='CGEventSourceGetTypeID'/>
<cftype type='^{CGFont=}' tollfree='__NSCFType' name='CGFontRef' gettypeid_func='CGFontGetTypeID'/>
<cftype type='^{CGFunction=}' tollfree='__NSCFType' name='CGFunctionRef' gettypeid_func='CGFunctionGetTypeID'/>
<cftype type='^{CGGradient=}' tollfree='__NSCFType' name='CGGradientRef' gettypeid_func='CGGradientGetTypeID'/>
<cftype type='^{CGImage=}' tollfree='__NSCFType' name='CGImageRef' gettypeid_func='CGImageGetTypeID'/>
<cftype type='^{CGLayer=}' tollfree='__NSCFType' name='CGLayerRef' gettypeid_func='CGLayerGetTypeID'/>
<cftype type='^{CGPath=}' tollfree='__NSCFType' name='CGMutablePathRef' gettypeid_func='CGPathGetTypeID'/>
<cftype type='^{CGPDFArray=}' name='CGPDFArrayRef'/>
<cftype type='^{CGPDFContentStream=}' name='CGPDFContentStreamRef'/>
<cftype type='^{CGPDFDictionary=}' name='CGPDFDictionaryRef'/>
<cftype type='^{CGPDFDocument=}' tollfree='__NSCFType' name='CGPDFDocumentRef' gettypeid_func='CGPDFDocumentGetTypeID'/>
<cftype type='^(CGPDFObject=)' name='CGPDFObjectRef'/>
<cftype type='^{CGPDFOperatorTable=}' name='CGPDFOperatorTableRef'/>
<cftype type='^{CGPDFPage=}' tollfree='__NSCFType' name='CGPDFPageRef' gettypeid_func='CGPDFPageGetTypeID'/>
<cftype type='^{CGPDFScanner=}' name='CGPDFScannerRef'/>
<cftype type='^{CGPDFStream=}' name='CGPDFStreamRef'/>
<cftype type='^{CGPDFString=}' name='CGPDFStringRef'/>
<cftype type='^{CGPSConverter=}' tollfree='__NSCFType' name='CGPSConverterRef' gettypeid_func='CGPSConverterGetTypeID'/>
<cftype type='^{CGPath=}' tollfree='__NSCFType' name='CGPathRef' gettypeid_func='CGPathGetTypeID'/>
<cftype type='^{CGPattern=}' tollfree='__NSCFType' name='CGPatternRef' gettypeid_func='CGPatternGetTypeID'/>
<cftype type='^{CGShading=}' tollfree='__NSCFType' name='CGShadingRef' gettypeid_func='CGShadingGetTypeID'/>
<opaque type='^{__CGEventTapProxy=}' name='CGEventTapProxy'/>
<constant type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}' name='CGAffineTransformIdentity'/>
<constant type='{CGPoint=ff}' type64='{CGPoint=dd}' name='CGPointZero'/>
<constant type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='CGRectInfinite'/>
<constant type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='CGRectNull'/>
<constant type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='CGRectZero'/>
<constant type='{CGSize=ff}' type64='{CGSize=dd}' name='CGSizeZero'/>
<constant type='^{__CFString=}' name='kCGColorBlack'/>
<constant type='^{__CFString=}' name='kCGColorClear'/>
<constant type='^{__CFString=}' name='kCGColorSpaceAdobeRGB1998'/>
<constant type='^{__CFString=}' name='kCGColorSpaceGenericCMYK'/>
<constant type='^{__CFString=}' name='kCGColorSpaceGenericGray'/>
<constant type='^{__CFString=}' name='kCGColorSpaceGenericGrayGamma2_2'/>
<constant type='^{__CFString=}' name='kCGColorSpaceGenericRGB'/>
<constant type='^{__CFString=}' name='kCGColorSpaceGenericRGBLinear'/>
<constant type='^{__CFString=}' name='kCGColorSpaceSRGB'/>
<constant type='^{__CFString=}' name='kCGColorWhite'/>
<constant type='^{__CFString=}' name='kCGFontVariationAxisDefaultValue'/>
<constant type='^{__CFString=}' name='kCGFontVariationAxisMaxValue'/>
<constant type='^{__CFString=}' name='kCGFontVariationAxisMinValue'/>
<constant type='^{__CFString=}' name='kCGFontVariationAxisName'/>
<constant type='^{__CFString=}' name='kCGPDFContextAllowsCopying'/>
<constant type='^{__CFString=}' name='kCGPDFContextAllowsPrinting'/>
<constant type='^{__CFString=}' name='kCGPDFContextArtBox'/>
<constant type='^{__CFString=}' name='kCGPDFContextAuthor'/>
<constant type='^{__CFString=}' name='kCGPDFContextBleedBox'/>
<constant type='^{__CFString=}' name='kCGPDFContextCreator'/>
<constant type='^{__CFString=}' name='kCGPDFContextCropBox'/>
<constant type='^{__CFString=}' name='kCGPDFContextEncryptionKeyLength'/>
<constant type='^{__CFString=}' name='kCGPDFContextKeywords'/>
<constant type='^{__CFString=}' name='kCGPDFContextMediaBox'/>
<constant type='^{__CFString=}' name='kCGPDFContextOutputIntent'/>
<constant type='^{__CFString=}' name='kCGPDFContextOutputIntents'/>
<constant type='^{__CFString=}' name='kCGPDFContextOwnerPassword'/>
<constant type='^{__CFString=}' name='kCGPDFContextSubject'/>
<constant type='^{__CFString=}' name='kCGPDFContextTitle'/>
<constant type='^{__CFString=}' name='kCGPDFContextTrimBox'/>
<constant type='^{__CFString=}' name='kCGPDFContextUserPassword'/>
<constant type='^{__CFString=}' name='kCGPDFXDestinationOutputProfile'/>
<constant type='^{__CFString=}' name='kCGPDFXInfo'/>
<constant type='^{__CFString=}' name='kCGPDFXOutputCondition'/>
<constant type='^{__CFString=}' name='kCGPDFXOutputConditionIdentifier'/>
<constant type='^{__CFString=}' name='kCGPDFXOutputIntentSubtype'/>
<constant type='^{__CFString=}' name='kCGPDFXRegistryName'/>
<constant type='^{__CFString=}' name='kCGWindowAlpha'/>
<constant type='^{__CFString=}' name='kCGWindowBackingLocationVideoMemory'/>
<constant type='^{__CFString=}' name='kCGWindowBounds'/>
<constant type='^{__CFString=}' name='kCGWindowIsOnscreen'/>
<constant type='^{__CFString=}' name='kCGWindowLayer'/>
<constant type='^{__CFString=}' name='kCGWindowMemoryUsage'/>
<constant type='^{__CFString=}' name='kCGWindowName'/>
<constant type='^{__CFString=}' name='kCGWindowNumber'/>
<constant type='^{__CFString=}' name='kCGWindowOwnerName'/>
<constant type='^{__CFString=}' name='kCGWindowOwnerPID'/>
<constant type='^{__CFString=}' name='kCGWindowSharingState'/>
<constant type='^{__CFString=}' name='kCGWindowStoreType'/>
<constant type='^{__CFString=}' name='kCGWindowWorkspace'/>
<string_constant value='BitsPerPixel' nsstring='true' name='kCGDisplayBitsPerPixel'/>
<string_constant value='BitsPerSample' nsstring='true' name='kCGDisplayBitsPerSample'/>
<string_constant value='kCGDisplayBytesPerRow' nsstring='true' name='kCGDisplayBytesPerRow'/>
<string_constant value='Height' nsstring='true' name='kCGDisplayHeight'/>
<string_constant value='IOFlags' nsstring='true' name='kCGDisplayIOFlags'/>
<string_constant value='Mode' nsstring='true' name='kCGDisplayMode'/>
<string_constant value='kCGDisplayModeIsInterlaced' nsstring='true' name='kCGDisplayModeIsInterlaced'/>
<string_constant value='kCGDisplayModeIsSafeForHardware' nsstring='true' name='kCGDisplayModeIsSafeForHardware'/>
<string_constant value='kCGDisplayModeIsStretched' nsstring='true' name='kCGDisplayModeIsStretched'/>
<string_constant value='kCGDisplayModeIsTelevisionOutput' nsstring='true' name='kCGDisplayModeIsTelevisionOutput'/>
<string_constant value='UsableForDesktopGUI' nsstring='true' name='kCGDisplayModeUsableForDesktopGUI'/>
<string_constant value='RefreshRate' nsstring='true' name='kCGDisplayRefreshRate'/>
<string_constant value='SamplesPerPixel' nsstring='true' name='kCGDisplaySamplesPerPixel'/>
<string_constant value='Width' nsstring='true' name='kCGDisplayWidth'/>
<string_constant value='IODisplayModeID' nsstring='true' name='kCGIODisplayModeID'/>
<string_constant value='com.apple.coregraphics.eventTapAdded' name='kCGNotifyEventTapAdded'/>
<string_constant value='com.apple.coregraphics.eventTapRemoved' name='kCGNotifyEventTapRemoved'/>
<string_constant value='com.apple.coregraphics.GUIConsoleSessionChanged' name='kCGNotifyGUIConsoleSessionChanged'/>
<string_constant value='com.apple.coregraphics.GUISessionUserChanged' name='kCGNotifyGUISessionUserChanged'/>
<string_constant value='kCGSSessionConsoleSetKey' nsstring='true' name='kCGSessionConsoleSetKey'/>
<string_constant value='kCGSessionLoginDoneKey' nsstring='true' name='kCGSessionLoginDoneKey'/>
<string_constant value='kCGSSessionOnConsoleKey' nsstring='true' name='kCGSessionOnConsoleKey'/>
<string_constant value='kCGSSessionUserIDKey' nsstring='true' name='kCGSessionUserIDKey'/>
<string_constant value='kCGSSessionUserNameKey' nsstring='true' name='kCGSessionUserNameKey'/>
<enum value='0' name='CGDisplayNoErr'/>
<enum value='0' name='CGEventNoErr'/>
<enum value='1' name='CGFLOAT_DEFINED'/>
<enum value='0' value64='1' name='CGFLOAT_IS_DOUBLE'/>
<enum value='65534' name='CGGlyphMax'/>
<enum value='0' name='CGGlyphMin'/>
<enum value='2' name='CGPDFDataFormatJPEG2000'/>
<enum value='1' name='CGPDFDataFormatJPEGEncoded'/>
<enum value='0' name='CGPDFDataFormatRaw'/>
<enum value='2' name='CGRectMaxXEdge'/>
<enum value='3' name='CGRectMaxYEdge'/>
<enum value='0' name='CGRectMinXEdge'/>
<enum value='1' name='CGRectMinYEdge'/>
<enum value='2' name='kCGAnnotatedSessionEventTap'/>
<enum value='4294967295' name='kCGAnyInputEventType'/>
<enum value='1500' name='kCGAssistiveTechHighWindowLevel'/>
<enum value='20' name='kCGAssistiveTechHighWindowLevelKey'/>
<enum value='2' name='kCGBackingStoreBuffered'/>
<enum value='1' name='kCGBackingStoreNonretained'/>
<enum value='0' name='kCGBackingStoreRetained'/>
<enum value='-20' name='kCGBackstopMenuLevel'/>
<enum value='3' name='kCGBackstopMenuLevelKey'/>
<enum value='-2147483648' name='kCGBaseWindowLevel'/>
<enum value='0' name='kCGBaseWindowLevelKey'/>
<enum value='31' name='kCGBitmapAlphaInfoMask'/>
<enum value='12288' name='kCGBitmapByteOrder16Big'/>
<enum value='4096' name='kCGBitmapByteOrder16Host'/>
<enum value='4096' name='kCGBitmapByteOrder16Little'/>
<enum value='16384' name='kCGBitmapByteOrder32Big'/>
<enum value='8192' name='kCGBitmapByteOrder32Host'/>
<enum value='8192' name='kCGBitmapByteOrder32Little'/>
<enum value='0' name='kCGBitmapByteOrderDefault'/>
<enum value='28672' name='kCGBitmapByteOrderMask'/>
<enum value='256' name='kCGBitmapFloatComponents'/>
<enum value='16' name='kCGBlendModeClear'/>
<enum value='14' name='kCGBlendModeColor'/>
<enum value='7' name='kCGBlendModeColorBurn'/>
<enum value='6' name='kCGBlendModeColorDodge'/>
<enum value='17' name='kCGBlendModeCopy'/>
<enum value='4' name='kCGBlendModeDarken'/>
<enum value='24' name='kCGBlendModeDestinationAtop'/>
<enum value='22' name='kCGBlendModeDestinationIn'/>
<enum value='23' name='kCGBlendModeDestinationOut'/>
<enum value='21' name='kCGBlendModeDestinationOver'/>
<enum value='10' name='kCGBlendModeDifference'/>
<enum value='11' name='kCGBlendModeExclusion'/>
<enum value='9' name='kCGBlendModeHardLight'/>
<enum value='12' name='kCGBlendModeHue'/>
<enum value='5' name='kCGBlendModeLighten'/>
<enum value='15' name='kCGBlendModeLuminosity'/>
<enum value='1' name='kCGBlendModeMultiply'/>
<enum value='0' name='kCGBlendModeNormal'/>
<enum value='3' name='kCGBlendModeOverlay'/>
<enum value='26' name='kCGBlendModePlusDarker'/>
<enum value='27' name='kCGBlendModePlusLighter'/>
<enum value='13' name='kCGBlendModeSaturation'/>
<enum value='2' name='kCGBlendModeScreen'/>
<enum value='8' name='kCGBlendModeSoftLight'/>
<enum value='20' name='kCGBlendModeSourceAtop'/>
<enum value='18' name='kCGBlendModeSourceIn'/>
<enum value='19' name='kCGBlendModeSourceOut'/>
<enum value='25' name='kCGBlendModeXOR'/>
<enum value='1' name='kCGCaptureNoFill'/>
<enum value='0' name='kCGCaptureNoOptions'/>
<enum value='2' name='kCGColorSpaceModelCMYK'/>
<enum value='4' name='kCGColorSpaceModelDeviceN'/>
<enum value='5' name='kCGColorSpaceModelIndexed'/>
<enum value='3' name='kCGColorSpaceModelLab'/>
<enum value='0' name='kCGColorSpaceModelMonochrome'/>
<enum value='6' name='kCGColorSpaceModelPattern'/>
<enum value='1' name='kCGColorSpaceModelRGB'/>
<enum value='-1' name='kCGColorSpaceModelUnknown'/>
<enum value='0' name='kCGConfigureForAppOnly'/>
<enum value='1' name='kCGConfigureForSession'/>
<enum value='2' name='kCGConfigurePermanently'/>
<enum value='2147483630' name='kCGCursorWindowLevel'/>
<enum value='19' name='kCGCursorWindowLevelKey'/>
<enum value='-2147483603' name='kCGDesktopIconWindowLevel'/>
<enum value='18' name='kCGDesktopIconWindowLevelKey'/>
<enum value='-2147483623' name='kCGDesktopWindowLevel'/>
<enum value='2' name='kCGDesktopWindowLevelKey'/>
<enum value='69730752' name='kCGDirectMainDisplay'/>
<enum value='16' name='kCGDisplayAddFlag'/>
<enum value='1' name='kCGDisplayBeginConfigurationFlag'/>
<enum value='0.0' name='kCGDisplayBlendNormal'/>
<enum value='1.0' name='kCGDisplayBlendSolidColor'/>
<enum value='4096' name='kCGDisplayDesktopShapeChangedFlag'/>
<enum value='512' name='kCGDisplayDisabledFlag'/>
<enum value='256' name='kCGDisplayEnabledFlag'/>
<enum value='0' name='kCGDisplayFadeReservationInvalidToken'/>
<enum value='1024' name='kCGDisplayMirrorFlag'/>
<enum value='2' name='kCGDisplayMovedFlag'/>
<enum value='32' name='kCGDisplayRemoveFlag'/>
<enum value='4' name='kCGDisplaySetMainFlag'/>
<enum value='8' name='kCGDisplaySetModeFlag'/>
<enum value='2048' name='kCGDisplayUnMirrorFlag'/>
<enum value='20' name='kCGDockWindowLevel'/>
<enum value='7' name='kCGDockWindowLevelKey'/>
<enum value='500' name='kCGDraggingWindowLevel'/>
<enum value='12' name='kCGDraggingWindowLevelKey'/>
<enum value='0' name='kCGEncodingFontSpecific'/>
<enum value='1' name='kCGEncodingMacRoman'/>
<enum value='1025' name='kCGErrorApplicationAlreadyRunning'/>
<enum value='1026' name='kCGErrorApplicationCanOnlyBeRunInOneSessionAtATime'/>
<enum value='1023' name='kCGErrorApplicationIncorrectExecutableFormatFound'/>
<enum value='1024' name='kCGErrorApplicationIsLaunching'/>
<enum value='1016' name='kCGErrorApplicationNotPermittedToExecute'/>
<enum value='1015' name='kCGErrorApplicationRequiresNewerSystem'/>
<enum value='1004' name='kCGErrorCannotComplete'/>
<enum value='1027' name='kCGErrorClassicApplicationsMustBeLaunchedByClassic'/>
<enum value='1000' name='kCGErrorFailure'/>
<enum value='1000' name='kCGErrorFirst'/>
<enum value='1028' name='kCGErrorForkFailed'/>
<enum value='1001' name='kCGErrorIllegalArgument'/>
<enum value='1002' name='kCGErrorInvalidConnection'/>
<enum value='1003' name='kCGErrorInvalidContext'/>
<enum value='1010' name='kCGErrorInvalidOperation'/>
<enum value='1029' name='kCGErrorLast'/>
<enum value='1005' name='kCGErrorNameTooLong'/>
<enum value='1009' name='kCGErrorNoCurrentPoint'/>
<enum value='1011' name='kCGErrorNoneAvailable'/>
<enum value='1006' name='kCGErrorNotImplemented'/>
<enum value='1007' name='kCGErrorRangeCheck'/>
<enum value='1029' name='kCGErrorRetryRegistration'/>
<enum value='0' name='kCGErrorSuccess'/>
<enum value='1008' name='kCGErrorTypeCheck'/>
<enum value='7' name='kCGEventFilterMaskPermitAllEvents'/>
<enum value='2' name='kCGEventFilterMaskPermitLocalKeyboardEvents'/>
<enum value='1' name='kCGEventFilterMaskPermitLocalMouseEvents'/>
<enum value='4' name='kCGEventFilterMaskPermitSystemDefinedEvents'/>
<enum value='65536' name='kCGEventFlagMaskAlphaShift'/>
<enum value='524288' name='kCGEventFlagMaskAlternate'/>
<enum value='1048576' name='kCGEventFlagMaskCommand'/>
<enum value='262144' name='kCGEventFlagMaskControl'/>
<enum value='4194304' name='kCGEventFlagMaskHelp'/>
<enum value='256' name='kCGEventFlagMaskNonCoalesced'/>
<enum value='2097152' name='kCGEventFlagMaskNumericPad'/>
<enum value='8388608' name='kCGEventFlagMaskSecondaryFn'/>
<enum value='131072' name='kCGEventFlagMaskShift'/>
<enum value='12' name='kCGEventFlagsChanged'/>
<enum value='10' name='kCGEventKeyDown'/>
<enum value='11' name='kCGEventKeyUp'/>
<enum value='1' name='kCGEventLeftMouseDown'/>
<enum value='6' name='kCGEventLeftMouseDragged'/>
<enum value='2' name='kCGEventLeftMouseUp'/>
<enum value='18446744073709551615' name='kCGEventMaskForAllEvents'/>
<enum value='5' name='kCGEventMouseMoved'/>
<enum value='0' name='kCGEventMouseSubtypeDefault'/>
<enum value='1' name='kCGEventMouseSubtypeTabletPoint'/>
<enum value='2' name='kCGEventMouseSubtypeTabletProximity'/>
<enum value='0' name='kCGEventNull'/>
<enum value='25' name='kCGEventOtherMouseDown'/>
<enum value='27' name='kCGEventOtherMouseDragged'/>
<enum value='26' name='kCGEventOtherMouseUp'/>
<enum value='3' name='kCGEventRightMouseDown'/>
<enum value='7' name='kCGEventRightMouseDragged'/>
<enum value='4' name='kCGEventRightMouseUp'/>
<enum value='22' name='kCGEventScrollWheel'/>
<enum value='44' name='kCGEventSourceGroupID'/>
<enum value='0' name='kCGEventSourceStateCombinedSessionState'/>
<enum value='1' name='kCGEventSourceStateHIDSystemState'/>
<enum value='45' name='kCGEventSourceStateID'/>
<enum value='-1' name='kCGEventSourceStatePrivate'/>
<enum value='41' name='kCGEventSourceUnixProcessID'/>
<enum value='42' name='kCGEventSourceUserData'/>
<enum value='43' name='kCGEventSourceUserID'/>
<enum value='1' name='kCGEventSuppressionStateRemoteMouseDrag'/>
<enum value='0' name='kCGEventSuppressionStateSuppressionInterval'/>
<enum value='1' name='kCGEventSupressionStateRemoteMouseDrag'/>
<enum value='0' name='kCGEventSupressionStateSupressionInterval'/>
<enum value='23' name='kCGEventTabletPointer'/>
<enum value='24' name='kCGEventTabletProximity'/>
<enum value='4294967294' name='kCGEventTapDisabledByTimeout'/>
<enum value='4294967295' name='kCGEventTapDisabledByUserInput'/>
<enum value='0' name='kCGEventTapOptionDefault'/>
<enum value='1' name='kCGEventTapOptionListenOnly'/>
<enum value='39' name='kCGEventTargetProcessSerialNumber'/>
<enum value='40' name='kCGEventTargetUnixProcessID'/>
<enum value='3' name='kCGFloatingWindowLevel'/>
<enum value='5' name='kCGFloatingWindowLevelKey'/>
<enum value='65535' name='kCGFontIndexInvalid'/>
<enum value='65534' name='kCGFontIndexMax'/>
<enum value='1' name='kCGFontPostScriptFormatType1'/>
<enum value='3' name='kCGFontPostScriptFormatType3'/>
<enum value='42' name='kCGFontPostScriptFormatType42'/>
<enum value='65534' name='kCGGlyphMax'/>
<enum value='2' name='kCGGradientDrawsAfterEndLocation'/>
<enum value='1' name='kCGGradientDrawsBeforeStartLocation'/>
<enum value='0' name='kCGHIDEventTap'/>
<enum value='0' name='kCGHeadInsertEventTap'/>
<enum value='200' name='kCGHelpWindowLevel'/>
<enum value='16' name='kCGHelpWindowLevelKey'/>
<enum value='4' name='kCGImageAlphaFirst'/>
<enum value='3' name='kCGImageAlphaLast'/>
<enum value='0' name='kCGImageAlphaNone'/>
<enum value='6' name='kCGImageAlphaNoneSkipFirst'/>
<enum value='5' name='kCGImageAlphaNoneSkipLast'/>
<enum value='7' name='kCGImageAlphaOnly'/>
<enum value='2' name='kCGImageAlphaPremultipliedFirst'/>
<enum value='1' name='kCGImageAlphaPremultipliedLast'/>
<enum value='0' name='kCGInterpolationDefault'/>
<enum value='3' name='kCGInterpolationHigh'/>
<enum value='2' name='kCGInterpolationLow'/>
<enum value='4' name='kCGInterpolationMedium'/>
<enum value='1' name='kCGInterpolationNone'/>
<enum value='8' name='kCGKeyboardEventAutorepeat'/>
<enum value='10' name='kCGKeyboardEventKeyboardType'/>
<enum value='9' name='kCGKeyboardEventKeycode'/>
<enum value='0' name='kCGLineCapButt'/>
<enum value='1' name='kCGLineCapRound'/>
<enum value='2' name='kCGLineCapSquare'/>
<enum value='2' name='kCGLineJoinBevel'/>
<enum value='0' name='kCGLineJoinMiter'/>
<enum value='1' name='kCGLineJoinRound'/>
<enum value='24' name='kCGMainMenuWindowLevel'/>
<enum value='8' name='kCGMainMenuWindowLevelKey'/>
<enum value='15' name='kCGMaxDisplayReservationInterval'/>
<enum value='2147483631' name='kCGMaximumWindowLevel'/>
<enum value='14' name='kCGMaximumWindowLevelKey'/>
<enum value='-2147483643' name='kCGMinimumWindowLevel'/>
<enum value='1' name='kCGMinimumWindowLevelKey'/>
<enum value='8' name='kCGModalPanelWindowLevel'/>
<enum value='10' name='kCGModalPanelWindowLevelKey'/>
<enum value='2' name='kCGMouseButtonCenter'/>
<enum value='0' name='kCGMouseButtonLeft'/>
<enum value='1' name='kCGMouseButtonRight'/>
<enum value='60.0' name='kCGMouseDownEventMaskingDeadSwitchTimeout'/>
<enum value='3' name='kCGMouseEventButtonNumber'/>
<enum value='1' name='kCGMouseEventClickState'/>
<enum value='4' name='kCGMouseEventDeltaX'/>
<enum value='5' name='kCGMouseEventDeltaY'/>
<enum value='6' name='kCGMouseEventInstantMouser'/>
<enum value='0' name='kCGMouseEventNumber'/>
<enum value='2' name='kCGMouseEventPressure'/>
<enum value='7' name='kCGMouseEventSubtype'/>
<enum value='91' name='kCGMouseEventWindowUnderMousePointer'/>
<enum value='92' name='kCGMouseEventWindowUnderMousePointerThatCanHandleThisEvent'/>
<enum value='0' name='kCGNormalWindowLevel'/>
<enum value='4' name='kCGNormalWindowLevelKey'/>
<enum value='0' name='kCGNullDirectDisplay'/>
<enum value='0' name='kCGNullWindowID'/>
<enum value='16' name='kCGNumReservedWindowLevels'/>
<enum value='2' name='kCGNumberOfEventSuppressionStates'/>
<enum value='2' name='kCGNumberOfEventSupressionStates'/>
<enum value='21' name='kCGNumberOfWindowLevelKeys'/>
<enum value='102' name='kCGOverlayWindowLevel'/>
<enum value='15' name='kCGOverlayWindowLevelKey'/>
<enum value='4' name='kCGPDFArtBox'/>
<enum value='2' name='kCGPDFBleedBox'/>
<enum value='1' name='kCGPDFCropBox'/>
<enum value='0' name='kCGPDFMediaBox'/>
<enum value='7' name='kCGPDFObjectTypeArray'/>
<enum value='2' name='kCGPDFObjectTypeBoolean'/>
<enum value='8' name='kCGPDFObjectTypeDictionary'/>
<enum value='3' name='kCGPDFObjectTypeInteger'/>
<enum value='5' name='kCGPDFObjectTypeName'/>
<enum value='1' name='kCGPDFObjectTypeNull'/>
<enum value='4' name='kCGPDFObjectTypeReal'/>
<enum value='9' name='kCGPDFObjectTypeStream'/>
<enum value='6' name='kCGPDFObjectTypeString'/>
<enum value='3' name='kCGPDFTrimBox'/>
<enum value='1' name='kCGPathEOFill'/>
<enum value='4' name='kCGPathEOFillStroke'/>
<enum value='3' name='kCGPathElementAddCurveToPoint'/>
<enum value='1' name='kCGPathElementAddLineToPoint'/>
<enum value='2' name='kCGPathElementAddQuadCurveToPoint'/>
<enum value='4' name='kCGPathElementCloseSubpath'/>
<enum value='0' name='kCGPathElementMoveToPoint'/>
<enum value='0' name='kCGPathFill'/>
<enum value='3' name='kCGPathFillStroke'/>
<enum value='2' name='kCGPathStroke'/>
<enum value='2' name='kCGPatternTilingConstantSpacing'/>
<enum value='1' name='kCGPatternTilingConstantSpacingMinimalDistortion'/>
<enum value='0' name='kCGPatternTilingNoDistortion'/>
<enum value='101' name='kCGPopUpMenuWindowLevel'/>
<enum value='11' name='kCGPopUpMenuWindowLevelKey'/>
<enum value='1' name='kCGRenderingIntentAbsoluteColorimetric'/>
<enum value='0' name='kCGRenderingIntentDefault'/>
<enum value='3' name='kCGRenderingIntentPerceptual'/>
<enum value='2' name='kCGRenderingIntentRelativeColorimetric'/>
<enum value='4' name='kCGRenderingIntentSaturation'/>
<enum value='1000' name='kCGScreenSaverWindowLevel'/>
<enum value='13' name='kCGScreenSaverWindowLevelKey'/>
<enum value='1' name='kCGScreenUpdateOperationMove'/>
<enum value='-2147483648' name='kCGScreenUpdateOperationReducedDirtyRectangleCount'/>
<enum value='0' name='kCGScreenUpdateOperationRefresh'/>
<enum value='1' name='kCGScrollEventUnitLine'/>
<enum value='0' name='kCGScrollEventUnitPixel'/>
<enum value='11' name='kCGScrollWheelEventDeltaAxis1'/>
<enum value='12' name='kCGScrollWheelEventDeltaAxis2'/>
<enum value='13' name='kCGScrollWheelEventDeltaAxis3'/>
<enum value='93' name='kCGScrollWheelEventFixedPtDeltaAxis1'/>
<enum value='94' name='kCGScrollWheelEventFixedPtDeltaAxis2'/>
<enum value='95' name='kCGScrollWheelEventFixedPtDeltaAxis3'/>
<enum value='14' name='kCGScrollWheelEventInstantMouser'/>
<enum value='88' name='kCGScrollWheelEventIsContinuous'/>
<enum value='96' name='kCGScrollWheelEventPointDeltaAxis1'/>
<enum value='97' name='kCGScrollWheelEventPointDeltaAxis2'/>
<enum value='98' name='kCGScrollWheelEventPointDeltaAxis3'/>
<enum value='99' name='kCGScrollWheelEventScrollPhase'/>
<enum value='1' name='kCGSessionEventTap'/>
<enum value='25' name='kCGStatusWindowLevel'/>
<enum value='9' name='kCGStatusWindowLevelKey'/>
<enum value='24' name='kCGTabletEventDeviceID'/>
<enum value='18' name='kCGTabletEventPointButtons'/>
<enum value='19' name='kCGTabletEventPointPressure'/>
<enum value='15' name='kCGTabletEventPointX'/>
<enum value='16' name='kCGTabletEventPointY'/>
<enum value='17' name='kCGTabletEventPointZ'/>
<enum value='22' name='kCGTabletEventRotation'/>
<enum value='23' name='kCGTabletEventTangentialPressure'/>
<enum value='20' name='kCGTabletEventTiltX'/>
<enum value='21' name='kCGTabletEventTiltY'/>
<enum value='25' name='kCGTabletEventVendor1'/>
<enum value='26' name='kCGTabletEventVendor2'/>
<enum value='27' name='kCGTabletEventVendor3'/>
<enum value='36' name='kCGTabletProximityEventCapabilityMask'/>
<enum value='31' name='kCGTabletProximityEventDeviceID'/>
<enum value='38' name='kCGTabletProximityEventEnterProximity'/>
<enum value='30' name='kCGTabletProximityEventPointerID'/>
<enum value='37' name='kCGTabletProximityEventPointerType'/>
<enum value='32' name='kCGTabletProximityEventSystemTabletID'/>
<enum value='29' name='kCGTabletProximityEventTabletID'/>
<enum value='28' name='kCGTabletProximityEventVendorID'/>
<enum value='34' name='kCGTabletProximityEventVendorPointerSerialNumber'/>
<enum value='33' name='kCGTabletProximityEventVendorPointerType'/>
<enum value='35' name='kCGTabletProximityEventVendorUniqueID'/>
<enum value='1' name='kCGTailAppendEventTap'/>
<enum value='7' name='kCGTextClip'/>
<enum value='0' name='kCGTextFill'/>
<enum value='4' name='kCGTextFillClip'/>
<enum value='2' name='kCGTextFillStroke'/>
<enum value='6' name='kCGTextFillStrokeClip'/>
<enum value='3' name='kCGTextInvisible'/>
<enum value='1' name='kCGTextStroke'/>
<enum value='5' name='kCGTextStrokeClip'/>
<enum value='3' name='kCGTornOffMenuWindowLevel'/>
<enum value='6' name='kCGTornOffMenuWindowLevelKey'/>
<enum value='19' name='kCGUtilityWindowLevel'/>
<enum value='17' name='kCGUtilityWindowLevelKey'/>
<enum value='3' name='kCGWindowBackingCFNumberType'/>
<enum value='3' name='kCGWindowIDCFNumberType'/>
<enum value='8' name='kCGWindowImageBestResolution'/>
<enum value='1' name='kCGWindowImageBoundsIgnoreFraming'/>
<enum value='0' name='kCGWindowImageDefault'/>
<enum value='16' name='kCGWindowImageNominalResolution'/>
<enum value='4' name='kCGWindowImageOnlyShadows'/>
<enum value='2' name='kCGWindowImageShouldBeOpaque'/>
<enum value='16' name='kCGWindowListExcludeDesktopElements'/>
<enum value='0' name='kCGWindowListOptionAll'/>
<enum value='8' name='kCGWindowListOptionIncludingWindow'/>
<enum value='2' name='kCGWindowListOptionOnScreenAboveWindow'/>
<enum value='4' name='kCGWindowListOptionOnScreenBelowWindow'/>
<enum value='1' name='kCGWindowListOptionOnScreenOnly'/>
<enum value='3' name='kCGWindowSharingCFNumberType'/>
<enum value='0' name='kCGWindowSharingNone'/>
<enum value='1' name='kCGWindowSharingReadOnly'/>
<enum value='2' name='kCGWindowSharingReadWrite'/>
<function name='CGAcquireDisplayFadeReservation'>
<arg type='f'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='CGAffineTransformConcat'>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGAffineTransformEqualToTransform'>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval type='B'/>
</function>
<function name='CGAffineTransformInvert'>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGAffineTransformIsIdentity'>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval type='B'/>
</function>
<function name='CGAffineTransformMake'>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGAffineTransformMakeRotation'>
<arg type='f' type64='d'/>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGAffineTransformMakeScale'>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGAffineTransformMakeTranslation'>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGAffineTransformRotate'>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<arg type='f' type64='d'/>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGAffineTransformScale'>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGAffineTransformTranslate'>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGAssociateMouseAndMouseCursorPosition'>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='CGBeginDisplayConfiguration'>
<arg type='^^{_CGDisplayConfigRef}'/>
<retval type='i'/>
</function>
<function name='CGBitmapContextCreate'>
<arg type='^v'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='^{CGColorSpace=}'/>
<arg type='I'/>
<retval type='^{CGContext=}' already_retained='true'/>
</function>
<function name='CGBitmapContextCreateImage'>
<arg type='^{CGContext=}'/>
<retval type='^{CGImage=}' already_retained='true'/>
</function>
<function name='CGBitmapContextCreateWithData'>
<arg type='^v'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='^{CGColorSpace=}'/>
<arg type='I'/>
<arg type='^?' function_pointer='true'>
<arg type='^v'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='^v'/>
<retval type='^{CGContext=}' already_retained='true'/>
</function>
<function name='CGBitmapContextGetAlphaInfo'>
<arg type='^{CGContext=}'/>
<retval type='i'/>
</function>
<function name='CGBitmapContextGetBitmapInfo'>
<arg type='^{CGContext=}'/>
<retval type='I'/>
</function>
<function name='CGBitmapContextGetBitsPerComponent'>
<arg type='^{CGContext=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGBitmapContextGetBitsPerPixel'>
<arg type='^{CGContext=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGBitmapContextGetBytesPerRow'>
<arg type='^{CGContext=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGBitmapContextGetColorSpace'>
<arg type='^{CGContext=}'/>
<retval type='^{CGColorSpace=}'/>
</function>
<function name='CGBitmapContextGetData'>
<arg type='^{CGContext=}'/>
<retval type='^v'/>
</function>
<function name='CGBitmapContextGetHeight'>
<arg type='^{CGContext=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGBitmapContextGetWidth'>
<arg type='^{CGContext=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGCancelDisplayConfiguration'>
<arg type='^{_CGDisplayConfigRef=}'/>
<retval type='i'/>
</function>
<function name='CGCaptureAllDisplays'>
<retval type='i'/>
</function>
<function name='CGCaptureAllDisplaysWithOptions'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CGColorCreate'>
<arg type='^{CGColorSpace=}'/>
<arg type='^f' type64='^d'/>
<retval type='^{CGColor=}' already_retained='true'/>
</function>
<function name='CGColorCreateCopy'>
<arg type='^{CGColor=}'/>
<retval type='^{CGColor=}' already_retained='true'/>
</function>
<function name='CGColorCreateCopyWithAlpha'>
<arg type='^{CGColor=}'/>
<arg type='f' type64='d'/>
<retval type='^{CGColor=}' already_retained='true'/>
</function>
<function name='CGColorCreateGenericCMYK'>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<retval type='^{CGColor=}' already_retained='true'/>
</function>
<function name='CGColorCreateGenericGray'>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<retval type='^{CGColor=}' already_retained='true'/>
</function>
<function name='CGColorCreateGenericRGB'>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<retval type='^{CGColor=}' already_retained='true'/>
</function>
<function name='CGColorCreateWithPattern'>
<arg type='^{CGColorSpace=}'/>
<arg type='^{CGPattern=}'/>
<arg type='^f' type64='^d'/>
<retval type='^{CGColor=}' already_retained='true'/>
</function>
<function name='CGColorEqualToColor'>
<arg type='^{CGColor=}'/>
<arg type='^{CGColor=}'/>
<retval type='B'/>
</function>
<function name='CGColorGetAlpha'>
<arg type='^{CGColor=}'/>
<retval type='f' type64='d'/>
</function>
<function name='CGColorGetColorSpace'>
<arg type='^{CGColor=}'/>
<retval type='^{CGColorSpace=}'/>
</function>
<function name='CGColorGetComponents'>
<arg type='^{CGColor=}'/>
<retval type='^f' type64='^d'/>
</function>
<function name='CGColorGetConstantColor'>
<arg type='^{__CFString=}'/>
<retval type='^{CGColor=}'/>
</function>
<function name='CGColorGetNumberOfComponents'>
<arg type='^{CGColor=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGColorGetPattern'>
<arg type='^{CGColor=}'/>
<retval type='^{CGPattern=}'/>
</function>
<function name='CGColorGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGColorRelease'>
<arg type='^{CGColor=}'/>
</function>
<function name='CGColorRetain'>
<arg type='^{CGColor=}'/>
<retval type='^{CGColor=}'/>
</function>
<function name='CGColorSpaceCopyICCProfile'>
<arg type='^{CGColorSpace=}'/>
<retval type='^{__CFData=}' already_retained='true'/>
</function>
<function name='CGColorSpaceCopyName'>
<arg type='^{CGColorSpace=}'/>
<retval type='^{__CFString=}' already_retained='true'/>
</function>
<function name='CGColorSpaceCreateCalibratedGray'>
<arg type='^f' type64='^d'/>
<arg type='^f' type64='^d'/>
<arg type='f' type64='d'/>
<retval type='^{CGColorSpace=}' already_retained='true'/>
</function>
<function name='CGColorSpaceCreateCalibratedRGB'>
<arg type='^f' type64='^d'/>
<arg type='^f' type64='^d'/>
<arg type='^f' type64='^d'/>
<arg type='^f' type64='^d'/>
<retval type='^{CGColorSpace=}' already_retained='true'/>
</function>
<function name='CGColorSpaceCreateDeviceCMYK'>
<retval type='^{CGColorSpace=}' already_retained='true'/>
</function>
<function name='CGColorSpaceCreateDeviceGray'>
<retval type='^{CGColorSpace=}' already_retained='true'/>
</function>
<function name='CGColorSpaceCreateDeviceRGB'>
<retval type='^{CGColorSpace=}' already_retained='true'/>
</function>
<function name='CGColorSpaceCreateICCBased'>
<arg type='L' type64='Q'/>
<arg type='^f' type64='^d'/>
<arg type='^{CGDataProvider=}'/>
<arg type='^{CGColorSpace=}'/>
<retval type='^{CGColorSpace=}' already_retained='true'/>
</function>
<function name='CGColorSpaceCreateIndexed'>
<arg type='^{CGColorSpace=}'/>
<arg type='L' type64='Q'/>
<arg type='*'/>
<retval type='^{CGColorSpace=}' already_retained='true'/>
</function>
<function name='CGColorSpaceCreateLab'>
<arg type='^f' type64='^d'/>
<arg type='^f' type64='^d'/>
<arg type='^f' type64='^d'/>
<retval type='^{CGColorSpace=}' already_retained='true'/>
</function>
<function name='CGColorSpaceCreatePattern'>
<arg type='^{CGColorSpace=}'/>
<retval type='^{CGColorSpace=}' already_retained='true'/>
</function>
<function name='CGColorSpaceCreateWithICCProfile'>
<arg type='^{__CFData=}'/>
<retval type='^{CGColorSpace=}' already_retained='true'/>
</function>
<function name='CGColorSpaceCreateWithName'>
<arg type='^{__CFString=}'/>
<retval type='^{CGColorSpace=}' already_retained='true'/>
</function>
<function name='CGColorSpaceCreateWithPlatformColorSpace'>
<arg type='^v'/>
<retval type='^{CGColorSpace=}' already_retained='true'/>
</function>
<function name='CGColorSpaceGetBaseColorSpace'>
<arg type='^{CGColorSpace=}'/>
<retval type='^{CGColorSpace=}'/>
</function>
<function name='CGColorSpaceGetColorTable'>
<arg type='^{CGColorSpace=}'/>
<arg type='*'/>
</function>
<function name='CGColorSpaceGetColorTableCount'>
<arg type='^{CGColorSpace=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGColorSpaceGetModel'>
<arg type='^{CGColorSpace=}'/>
<retval type='i'/>
</function>
<function name='CGColorSpaceGetNumberOfComponents'>
<arg type='^{CGColorSpace=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGColorSpaceGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGColorSpaceRelease'>
<arg type='^{CGColorSpace=}'/>
</function>
<function name='CGColorSpaceRetain'>
<arg type='^{CGColorSpace=}'/>
<retval type='^{CGColorSpace=}'/>
</function>
<function name='CGCompleteDisplayConfiguration'>
<arg type='^{_CGDisplayConfigRef=}'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CGConfigureDisplayFadeEffect'>
<arg type='^{_CGDisplayConfigRef=}'/>
<arg type='f'/>
<arg type='f'/>
<arg type='f'/>
<arg type='f'/>
<arg type='f'/>
<retval type='i'/>
</function>
<function name='CGConfigureDisplayMirrorOfDisplay'>
<arg type='^{_CGDisplayConfigRef=}'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CGConfigureDisplayMode'>
<arg type='^{_CGDisplayConfigRef=}'/>
<arg type='I'/>
<arg type='^{__CFDictionary=}'/>
<retval type='i'/>
</function>
<function name='CGConfigureDisplayOrigin'>
<arg type='^{_CGDisplayConfigRef=}'/>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='CGConfigureDisplayStereoOperation'>
<arg type='^{_CGDisplayConfigRef=}'/>
<arg type='I'/>
<arg type='i' type64='I'/>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='CGConfigureDisplayWithDisplayMode'>
<arg type='^{_CGDisplayConfigRef=}'/>
<arg type='I'/>
<arg type='^{CGDisplayMode=}'/>
<arg type='^{__CFDictionary=}'/>
<retval type='i'/>
</function>
<function name='CGContextAddArc'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='i'/>
</function>
<function name='CGContextAddArcToPoint'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextAddCurveToPoint'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextAddEllipseInRect'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGContextAddLineToPoint'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextAddLines'>
<arg type='^{CGContext=}'/>
<arg type='^{CGPoint=ff}' type64='^{CGPoint=dd}'/>
<arg type='L' type64='Q'/>
</function>
<function name='CGContextAddPath'>
<arg type='^{CGContext=}'/>
<arg type='^{CGPath=}'/>
</function>
<function name='CGContextAddQuadCurveToPoint'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextAddRect'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGContextAddRects'>
<arg type='^{CGContext=}'/>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='L' type64='Q'/>
</function>
<function name='CGContextBeginPage'>
<arg type='^{CGContext=}'/>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGContextBeginPath'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGContextBeginTransparencyLayer'>
<arg type='^{CGContext=}'/>
<arg type='^{__CFDictionary=}'/>
</function>
<function name='CGContextBeginTransparencyLayerWithRect'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^{__CFDictionary=}'/>
</function>
<function name='CGContextClearRect'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGContextClip'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGContextClipToMask'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^{CGImage=}'/>
</function>
<function name='CGContextClipToRect'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGContextClipToRects'>
<arg type='^{CGContext=}'/>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='L' type64='Q'/>
</function>
<function name='CGContextClosePath'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGContextConcatCTM'>
<arg type='^{CGContext=}'/>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGContextConvertPointToDeviceSpace'>
<arg type='^{CGContext=}'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='CGContextConvertPointToUserSpace'>
<arg type='^{CGContext=}'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='CGContextConvertRectToDeviceSpace'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGContextConvertRectToUserSpace'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGContextConvertSizeToDeviceSpace'>
<arg type='^{CGContext=}'/>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval type='{CGSize=ff}' type64='{CGSize=dd}'/>
</function>
<function name='CGContextConvertSizeToUserSpace'>
<arg type='^{CGContext=}'/>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval type='{CGSize=ff}' type64='{CGSize=dd}'/>
</function>
<function name='CGContextCopyPath'>
<arg type='^{CGContext=}'/>
<retval type='^{CGPath=}' already_retained='true'/>
</function>
<function name='CGContextDrawImage'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^{CGImage=}'/>
</function>
<function name='CGContextDrawLayerAtPoint'>
<arg type='^{CGContext=}'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='^{CGLayer=}'/>
</function>
<function name='CGContextDrawLayerInRect'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^{CGLayer=}'/>
</function>
<function name='CGContextDrawLinearGradient'>
<arg type='^{CGContext=}'/>
<arg type='^{CGGradient=}'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='I'/>
</function>
<function name='CGContextDrawPDFDocument'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^{CGPDFDocument=}'/>
<arg type='i'/>
</function>
<function name='CGContextDrawPDFPage'>
<arg type='^{CGContext=}'/>
<arg type='^{CGPDFPage=}'/>
</function>
<function name='CGContextDrawPath'>
<arg type='^{CGContext=}'/>
<arg type='i'/>
</function>
<function name='CGContextDrawRadialGradient'>
<arg type='^{CGContext=}'/>
<arg type='^{CGGradient=}'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='f' type64='d'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='f' type64='d'/>
<arg type='I'/>
</function>
<function name='CGContextDrawShading'>
<arg type='^{CGContext=}'/>
<arg type='^{CGShading=}'/>
</function>
<function name='CGContextDrawTiledImage'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^{CGImage=}'/>
</function>
<function name='CGContextEOClip'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGContextEOFillPath'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGContextEndPage'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGContextEndTransparencyLayer'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGContextFillEllipseInRect'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGContextFillPath'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGContextFillRect'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGContextFillRects'>
<arg type='^{CGContext=}'/>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='L' type64='Q'/>
</function>
<function name='CGContextFlush'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGContextGetCTM'>
<arg type='^{CGContext=}'/>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGContextGetClipBoundingBox'>
<arg type='^{CGContext=}'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGContextGetInterpolationQuality'>
<arg type='^{CGContext=}'/>
<retval type='i'/>
</function>
<function name='CGContextGetPathBoundingBox'>
<arg type='^{CGContext=}'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGContextGetPathCurrentPoint'>
<arg type='^{CGContext=}'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='CGContextGetTextMatrix'>
<arg type='^{CGContext=}'/>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGContextGetTextPosition'>
<arg type='^{CGContext=}'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='CGContextGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGContextGetUserSpaceToDeviceSpaceTransform'>
<arg type='^{CGContext=}'/>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGContextIsPathEmpty'>
<arg type='^{CGContext=}'/>
<retval type='B'/>
</function>
<function name='CGContextMoveToPoint'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextPathContainsPoint'>
<arg type='^{CGContext=}'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='i'/>
<retval type='B'/>
</function>
<function name='CGContextRelease'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGContextReplacePathWithStrokedPath'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGContextRestoreGState'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGContextRetain'>
<arg type='^{CGContext=}'/>
<retval type='^{CGContext=}'/>
</function>
<function name='CGContextRotateCTM'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextSaveGState'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGContextScaleCTM'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextSelectFont'>
<arg type='^{CGContext=}'/>
<arg type='*'/>
<arg type='f' type64='d'/>
<arg type='i'/>
</function>
<function name='CGContextSetAllowsAntialiasing'>
<arg type='^{CGContext=}'/>
<arg type='B'/>
</function>
<function name='CGContextSetAllowsFontSmoothing'>
<arg type='^{CGContext=}'/>
<arg type='B'/>
</function>
<function name='CGContextSetAllowsFontSubpixelPositioning'>
<arg type='^{CGContext=}'/>
<arg type='B'/>
</function>
<function name='CGContextSetAllowsFontSubpixelQuantization'>
<arg type='^{CGContext=}'/>
<arg type='B'/>
</function>
<function name='CGContextSetAlpha'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextSetBlendMode'>
<arg type='^{CGContext=}'/>
<arg type='i'/>
</function>
<function name='CGContextSetCMYKFillColor'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextSetCMYKStrokeColor'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextSetCharacterSpacing'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextSetFillColor'>
<arg type='^{CGContext=}'/>
<arg type='^f' type64='^d'/>
</function>
<function name='CGContextSetFillColorSpace'>
<arg type='^{CGContext=}'/>
<arg type='^{CGColorSpace=}'/>
</function>
<function name='CGContextSetFillColorWithColor'>
<arg type='^{CGContext=}'/>
<arg type='^{CGColor=}'/>
</function>
<function name='CGContextSetFillPattern'>
<arg type='^{CGContext=}'/>
<arg type='^{CGPattern=}'/>
<arg type='^f' type64='^d'/>
</function>
<function name='CGContextSetFlatness'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextSetFont'>
<arg type='^{CGContext=}'/>
<arg type='^{CGFont=}'/>
</function>
<function name='CGContextSetFontSize'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextSetGrayFillColor'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextSetGrayStrokeColor'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextSetInterpolationQuality'>
<arg type='^{CGContext=}'/>
<arg type='i'/>
</function>
<function name='CGContextSetLineCap'>
<arg type='^{CGContext=}'/>
<arg type='i'/>
</function>
<function name='CGContextSetLineDash'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='^f' type64='^d'/>
<arg type='L' type64='Q'/>
</function>
<function name='CGContextSetLineJoin'>
<arg type='^{CGContext=}'/>
<arg type='i'/>
</function>
<function name='CGContextSetLineWidth'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextSetMiterLimit'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextSetPatternPhase'>
<arg type='^{CGContext=}'/>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
</function>
<function name='CGContextSetRGBFillColor'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextSetRGBStrokeColor'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextSetRenderingIntent'>
<arg type='^{CGContext=}'/>
<arg type='i'/>
</function>
<function name='CGContextSetShadow'>
<arg type='^{CGContext=}'/>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextSetShadowWithColor'>
<arg type='^{CGContext=}'/>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg type='f' type64='d'/>
<arg type='^{CGColor=}'/>
</function>
<function name='CGContextSetShouldAntialias'>
<arg type='^{CGContext=}'/>
<arg type='B'/>
</function>
<function name='CGContextSetShouldSmoothFonts'>
<arg type='^{CGContext=}'/>
<arg type='B'/>
</function>
<function name='CGContextSetShouldSubpixelPositionFonts'>
<arg type='^{CGContext=}'/>
<arg type='B'/>
</function>
<function name='CGContextSetShouldSubpixelQuantizeFonts'>
<arg type='^{CGContext=}'/>
<arg type='B'/>
</function>
<function name='CGContextSetStrokeColor'>
<arg type='^{CGContext=}'/>
<arg type='^f' type64='^d'/>
</function>
<function name='CGContextSetStrokeColorSpace'>
<arg type='^{CGContext=}'/>
<arg type='^{CGColorSpace=}'/>
</function>
<function name='CGContextSetStrokeColorWithColor'>
<arg type='^{CGContext=}'/>
<arg type='^{CGColor=}'/>
</function>
<function name='CGContextSetStrokePattern'>
<arg type='^{CGContext=}'/>
<arg type='^{CGPattern=}'/>
<arg type='^f' type64='^d'/>
</function>
<function name='CGContextSetTextDrawingMode'>
<arg type='^{CGContext=}'/>
<arg type='i'/>
</function>
<function name='CGContextSetTextMatrix'>
<arg type='^{CGContext=}'/>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGContextSetTextPosition'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextShowGlyphs'>
<arg type='^{CGContext=}'/>
<arg type='^S'/>
<arg type='L' type64='Q'/>
</function>
<function name='CGContextShowGlyphsAtPoint'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='^S'/>
<arg type='L' type64='Q'/>
</function>
<function name='CGContextShowGlyphsAtPositions'>
<arg type='^{CGContext=}'/>
<arg type='^S'/>
<arg type='^{CGPoint=ff}' type64='^{CGPoint=dd}'/>
<arg type='L' type64='Q'/>
</function>
<function name='CGContextShowGlyphsWithAdvances'>
<arg type='^{CGContext=}'/>
<arg type='^S'/>
<arg type='^{CGSize=ff}' type64='^{CGSize=dd}'/>
<arg type='L' type64='Q'/>
</function>
<function name='CGContextShowText'>
<arg type='^{CGContext=}'/>
<arg type='*'/>
<arg type='L' type64='Q'/>
</function>
<function name='CGContextShowTextAtPoint'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='*'/>
<arg type='L' type64='Q'/>
</function>
<function name='CGContextStrokeEllipseInRect'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGContextStrokeLineSegments'>
<arg type='^{CGContext=}'/>
<arg type='^{CGPoint=ff}' type64='^{CGPoint=dd}'/>
<arg type='L' type64='Q'/>
</function>
<function name='CGContextStrokePath'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGContextStrokeRect'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGContextStrokeRectWithWidth'>
<arg type='^{CGContext=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='f' type64='d'/>
</function>
<function name='CGContextSynchronize'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGContextTranslateCTM'>
<arg type='^{CGContext=}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGCursorIsDrawnInFramebuffer'>
<retval type='i' type64='I'/>
</function>
<function name='CGCursorIsVisible'>
<retval type='i' type64='I'/>
</function>
<function name='CGDataConsumerCreate'>
<arg type='^v'/>
<arg type='^{CGDataConsumerCallbacks=^?^?}'/>
<retval type='^{CGDataConsumer=}' already_retained='true'/>
</function>
<function name='CGDataConsumerCreateWithCFData'>
<arg type='^{__CFData=}'/>
<retval type='^{CGDataConsumer=}' already_retained='true'/>
</function>
<function name='CGDataConsumerCreateWithURL'>
<arg type='^{__CFURL=}'/>
<retval type='^{CGDataConsumer=}' already_retained='true'/>
</function>
<function name='CGDataConsumerGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGDataConsumerRelease'>
<arg type='^{CGDataConsumer=}'/>
</function>
<function name='CGDataConsumerRetain'>
<arg type='^{CGDataConsumer=}'/>
<retval type='^{CGDataConsumer=}'/>
</function>
<function name='CGDataProviderCopyData'>
<arg type='^{CGDataProvider=}'/>
<retval type='^{__CFData=}' already_retained='true'/>
</function>
<function name='CGDataProviderCreate'>
<arg type='^v'/>
<arg type='^{CGDataProviderCallbacks=^?^?^?^?}'/>
<retval type='^{CGDataProvider=}' already_retained='true'/>
</function>
<function name='CGDataProviderCreateDirect'>
<arg type='^v'/>
<arg type='q'/>
<arg type='^{CGDataProviderDirectCallbacks=I^?^?^?^?}'/>
<retval type='^{CGDataProvider=}' already_retained='true'/>
</function>
<function name='CGDataProviderCreateDirectAccess'>
<arg type='^v'/>
<arg type='L' type64='Q'/>
<arg type='^{CGDataProviderDirectAccessCallbacks=^?^?^?^?}'/>
<retval type='^{CGDataProvider=}' already_retained='true'/>
</function>
<function name='CGDataProviderCreateSequential'>
<arg type='^v'/>
<arg type='^{CGDataProviderSequentialCallbacks=I^?^?^?^?}'/>
<retval type='^{CGDataProvider=}' already_retained='true'/>
</function>
<function name='CGDataProviderCreateWithCFData'>
<arg type='^{__CFData=}'/>
<retval type='^{CGDataProvider=}' already_retained='true'/>
</function>
<function name='CGDataProviderCreateWithData'>
<arg type='^v'/>
<arg type='^v'/>
<arg type='L' type64='Q'/>
<arg type='^?' function_pointer='true'>
<arg type='^v'/>
<arg type='^v'/>
<arg type='L' type64='Q'/>
<retval type='v'/>
</arg>
<retval type='^{CGDataProvider=}' already_retained='true'/>
</function>
<function name='CGDataProviderCreateWithFilename'>
<arg type='*'/>
<retval type='^{CGDataProvider=}' already_retained='true'/>
</function>
<function name='CGDataProviderCreateWithURL'>
<arg type='^{__CFURL=}'/>
<retval type='^{CGDataProvider=}' already_retained='true'/>
</function>
<function name='CGDataProviderGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGDataProviderRelease'>
<arg type='^{CGDataProvider=}'/>
</function>
<function name='CGDataProviderRetain'>
<arg type='^{CGDataProvider=}'/>
<retval type='^{CGDataProvider=}'/>
</function>
<function name='CGDisplayAvailableModes'>
<arg type='I'/>
<retval type='^{__CFArray=}'/>
</function>
<function name='CGDisplayBeamPosition'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CGDisplayBestModeForParameters'>
<arg type='I'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='^i' type64='^I'/>
<retval type='^{__CFDictionary=}'/>
</function>
<function name='CGDisplayBestModeForParametersAndRefreshRate'>
<arg type='I'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='d'/>
<arg type='^i' type64='^I'/>
<retval type='^{__CFDictionary=}'/>
</function>
<function name='CGDisplayBestModeForParametersAndRefreshRateWithProperty'>
<arg type='I'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='d'/>
<arg type='^{__CFString=}'/>
<arg type='^i' type64='^I'/>
<retval type='^{__CFDictionary=}'/>
</function>
<function name='CGDisplayBounds'>
<arg type='I'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGDisplayCanSetPalette'>
<arg type='I'/>
<retval type='i' type64='I'/>
</function>
<function name='CGDisplayCapture'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CGDisplayCaptureWithOptions'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CGDisplayCopyAllDisplayModes'>
<arg type='I'/>
<arg type='^{__CFDictionary=}'/>
<retval type='^{__CFArray=}' already_retained='true'/>
</function>
<function name='CGDisplayCopyColorSpace'>
<arg type='I'/>
<retval type='^{CGColorSpace=}' already_retained='true'/>
</function>
<function name='CGDisplayCopyDisplayMode'>
<arg type='I'/>
<retval type='^{CGDisplayMode=}' already_retained='true'/>
</function>
<function name='CGDisplayCreateImage'>
<arg type='I'/>
<retval type='^{CGImage=}' already_retained='true'/>
</function>
<function name='CGDisplayCreateImageForRect'>
<arg type='I'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='^{CGImage=}' already_retained='true'/>
</function>
<function name='CGDisplayCurrentMode'>
<arg type='I'/>
<retval type='^{__CFDictionary=}'/>
</function>
<function name='CGDisplayFade'>
<arg type='I'/>
<arg type='f'/>
<arg type='f'/>
<arg type='f'/>
<arg type='f'/>
<arg type='f'/>
<arg type='f'/>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='CGDisplayFadeOperationInProgress'>
<retval type='i' type64='I'/>
</function>
<function name='CGDisplayGammaTableCapacity'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CGDisplayGetDrawingContext'>
<arg type='I'/>
<retval type='^{CGContext=}'/>
</function>
<function name='CGDisplayHideCursor'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CGDisplayIDToOpenGLDisplayMask'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CGDisplayIOServicePort'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CGDisplayIsActive'>
<arg type='I'/>
<retval type='i' type64='I'/>
</function>
<function name='CGDisplayIsAlwaysInMirrorSet'>
<arg type='I'/>
<retval type='i' type64='I'/>
</function>
<function name='CGDisplayIsAsleep'>
<arg type='I'/>
<retval type='i' type64='I'/>
</function>
<function name='CGDisplayIsBuiltin'>
<arg type='I'/>
<retval type='i' type64='I'/>
</function>
<function name='CGDisplayIsCaptured'>
<arg type='I'/>
<retval type='i' type64='I'/>
</function>
<function name='CGDisplayIsInHWMirrorSet'>
<arg type='I'/>
<retval type='i' type64='I'/>
</function>
<function name='CGDisplayIsInMirrorSet'>
<arg type='I'/>
<retval type='i' type64='I'/>
</function>
<function name='CGDisplayIsMain'>
<arg type='I'/>
<retval type='i' type64='I'/>
</function>
<function name='CGDisplayIsOnline'>
<arg type='I'/>
<retval type='i' type64='I'/>
</function>
<function name='CGDisplayIsStereo'>
<arg type='I'/>
<retval type='i' type64='I'/>
</function>
<function name='CGDisplayMirrorsDisplay'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CGDisplayModeCopyPixelEncoding'>
<arg type='^{CGDisplayMode=}'/>
<retval type='^{__CFString=}' already_retained='true'/>
</function>
<function name='CGDisplayModeGetHeight'>
<arg type='^{CGDisplayMode=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGDisplayModeGetIODisplayModeID'>
<arg type='^{CGDisplayMode=}'/>
<retval type='i'/>
</function>
<function name='CGDisplayModeGetIOFlags'>
<arg type='^{CGDisplayMode=}'/>
<retval type='I'/>
</function>
<function name='CGDisplayModeGetRefreshRate'>
<arg type='^{CGDisplayMode=}'/>
<retval type='d'/>
</function>
<function name='CGDisplayModeGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGDisplayModeGetWidth'>
<arg type='^{CGDisplayMode=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGDisplayModeIsUsableForDesktopGUI'>
<arg type='^{CGDisplayMode=}'/>
<retval type='B'/>
</function>
<function name='CGDisplayModeRelease'>
<arg type='^{CGDisplayMode=}'/>
</function>
<function name='CGDisplayModeRetain'>
<arg type='^{CGDisplayMode=}'/>
<retval type='^{CGDisplayMode=}'/>
</function>
<function name='CGDisplayModelNumber'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CGDisplayMoveCursorToPoint'>
<arg type='I'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval type='i'/>
</function>
<function name='CGDisplayPixelsHigh'>
<arg type='I'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGDisplayPixelsWide'>
<arg type='I'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGDisplayPrimaryDisplay'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CGDisplayRegisterReconfigurationCallback'>
<arg type='^?' function_pointer='true'>
<arg type='I'/>
<arg type='I'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='^v'/>
<retval type='i'/>
</function>
<function name='CGDisplayRelease'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CGDisplayRemoveReconfigurationCallback'>
<arg type='^?' function_pointer='true'>
<arg type='I'/>
<arg type='I'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='^v'/>
<retval type='i'/>
</function>
<function name='CGDisplayRestoreColorSyncSettings'/>
<function name='CGDisplayRotation'>
<arg type='I'/>
<retval type='d'/>
</function>
<function name='CGDisplayScreenSize'>
<arg type='I'/>
<retval type='{CGSize=ff}' type64='{CGSize=dd}'/>
</function>
<function name='CGDisplaySerialNumber'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CGDisplaySetDisplayMode'>
<arg type='I'/>
<arg type='^{CGDisplayMode=}'/>
<arg type='^{__CFDictionary=}'/>
<retval type='i'/>
</function>
<function name='CGDisplaySetPalette'>
<arg type='I'/>
<arg type='^{_CGDirectPaletteRef=}'/>
<retval type='i'/>
</function>
<function name='CGDisplaySetStereoOperation'>
<arg type='I'/>
<arg type='i' type64='I'/>
<arg type='i' type64='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CGDisplayShowCursor'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CGDisplaySwitchToMode'>
<arg type='I'/>
<arg type='^{__CFDictionary=}'/>
<retval type='i'/>
</function>
<function name='CGDisplayUnitNumber'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CGDisplayUsesOpenGLAcceleration'>
<arg type='I'/>
<retval type='i' type64='I'/>
</function>
<function name='CGDisplayVendorNumber'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CGDisplayWaitForBeamPositionOutsideLines'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CGEnableEventStateCombining'>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='CGEventCreate'>
<arg type='^{__CGEventSource=}'/>
<retval type='^{__CGEvent=}' already_retained='true'/>
</function>
<function name='CGEventCreateCopy'>
<arg type='^{__CGEvent=}'/>
<retval type='^{__CGEvent=}' already_retained='true'/>
</function>
<function name='CGEventCreateData'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CGEvent=}'/>
<retval type='^{__CFData=}' already_retained='true'/>
</function>
<function name='CGEventCreateFromData'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFData=}'/>
<retval type='^{__CGEvent=}' already_retained='true'/>
</function>
<function name='CGEventCreateKeyboardEvent'>
<arg type='^{__CGEventSource=}'/>
<arg type='S'/>
<arg type='B'/>
<retval type='^{__CGEvent=}' already_retained='true'/>
</function>
<function name='CGEventCreateMouseEvent'>
<arg type='^{__CGEventSource=}'/>
<arg type='I'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='I'/>
<retval type='^{__CGEvent=}' already_retained='true'/>
</function>
<function variadic='true' name='CGEventCreateScrollWheelEvent'>
<arg type='^{__CGEventSource=}'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<retval type='^{__CGEvent=}' already_retained='true'/>
</function>
<function name='CGEventCreateSourceFromEvent'>
<arg type='^{__CGEvent=}'/>
<retval type='^{__CGEventSource=}' already_retained='true'/>
</function>
<function name='CGEventGetDoubleValueField'>
<arg type='^{__CGEvent=}'/>
<arg type='I'/>
<retval type='d'/>
</function>
<function name='CGEventGetFlags'>
<arg type='^{__CGEvent=}'/>
<retval type='Q'/>
</function>
<function name='CGEventGetIntegerValueField'>
<arg type='^{__CGEvent=}'/>
<arg type='I'/>
<retval type='q'/>
</function>
<function name='CGEventGetLocation'>
<arg type='^{__CGEvent=}'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='CGEventGetTimestamp'>
<arg type='^{__CGEvent=}'/>
<retval type='Q'/>
</function>
<function name='CGEventGetType'>
<arg type='^{__CGEvent=}'/>
<retval type='I'/>
</function>
<function name='CGEventGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGEventGetUnflippedLocation'>
<arg type='^{__CGEvent=}'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='CGEventKeyboardGetUnicodeString'>
<arg type='^{__CGEvent=}'/>
<arg type='L' type64='Q'/>
<arg type='^I' type64='^Q'/>
<arg type='^S'/>
</function>
<function name='CGEventKeyboardSetUnicodeString'>
<arg type='^{__CGEvent=}'/>
<arg type='L' type64='Q'/>
<arg type='^S'/>
</function>
<function name='CGEventPost'>
<arg type='I'/>
<arg type='^{__CGEvent=}'/>
</function>
<function name='CGEventPostToPSN'>
<arg type='^v'/>
<arg type='^{__CGEvent=}'/>
</function>
<function name='CGEventSetDoubleValueField'>
<arg type='^{__CGEvent=}'/>
<arg type='I'/>
<arg type='d'/>
</function>
<function name='CGEventSetFlags'>
<arg type='^{__CGEvent=}'/>
<arg type='Q'/>
</function>
<function name='CGEventSetIntegerValueField'>
<arg type='^{__CGEvent=}'/>
<arg type='I'/>
<arg type='q'/>
</function>
<function name='CGEventSetLocation'>
<arg type='^{__CGEvent=}'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='CGEventSetSource'>
<arg type='^{__CGEvent=}'/>
<arg type='^{__CGEventSource=}'/>
</function>
<function name='CGEventSetTimestamp'>
<arg type='^{__CGEvent=}'/>
<arg type='Q'/>
</function>
<function name='CGEventSetType'>
<arg type='^{__CGEvent=}'/>
<arg type='I'/>
</function>
<function name='CGEventSourceButtonState'>
<arg type='I'/>
<arg type='I'/>
<retval type='B'/>
</function>
<function name='CGEventSourceCounterForEventType'>
<arg type='I'/>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CGEventSourceCreate'>
<arg type='I'/>
<retval type='^{__CGEventSource=}' already_retained='true'/>
</function>
<function name='CGEventSourceFlagsState'>
<arg type='I'/>
<retval type='Q'/>
</function>
<function name='CGEventSourceGetKeyboardType'>
<arg type='^{__CGEventSource=}'/>
<retval type='I'/>
</function>
<function name='CGEventSourceGetLocalEventsFilterDuringSuppressionState'>
<arg type='^{__CGEventSource=}'/>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CGEventSourceGetLocalEventsSuppressionInterval'>
<arg type='^{__CGEventSource=}'/>
<retval type='d'/>
</function>
<function name='CGEventSourceGetPixelsPerLine'>
<arg type='^{__CGEventSource=}'/>
<retval type='d'/>
</function>
<function name='CGEventSourceGetSourceStateID'>
<arg type='^{__CGEventSource=}'/>
<retval type='I'/>
</function>
<function name='CGEventSourceGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGEventSourceGetUserData'>
<arg type='^{__CGEventSource=}'/>
<retval type='q'/>
</function>
<function name='CGEventSourceKeyState'>
<arg type='I'/>
<arg type='S'/>
<retval type='B'/>
</function>
<function name='CGEventSourceSecondsSinceLastEventType'>
<arg type='I'/>
<arg type='I'/>
<retval type='d'/>
</function>
<function name='CGEventSourceSetKeyboardType'>
<arg type='^{__CGEventSource=}'/>
<arg type='I'/>
</function>
<function name='CGEventSourceSetLocalEventsFilterDuringSuppressionState'>
<arg type='^{__CGEventSource=}'/>
<arg type='I'/>
<arg type='I'/>
</function>
<function name='CGEventSourceSetLocalEventsSuppressionInterval'>
<arg type='^{__CGEventSource=}'/>
<arg type='d'/>
</function>
<function name='CGEventSourceSetPixelsPerLine'>
<arg type='^{__CGEventSource=}'/>
<arg type='d'/>
</function>
<function name='CGEventSourceSetUserData'>
<arg type='^{__CGEventSource=}'/>
<arg type='q'/>
</function>
<function name='CGEventTapCreate'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='Q'/>
<arg type='^?' function_pointer='true'>
<arg type='^{__CGEventTapProxy=}'/>
<arg type='I'/>
<arg type='^{__CGEvent=}'/>
<arg type='^v'/>
<retval type='^{__CGEvent=}'/>
</arg>
<arg type='^v'/>
<retval type='^{__CFMachPort=}' already_retained='true'/>
</function>
<function name='CGEventTapCreateForPSN'>
<arg type='^v'/>
<arg type='I'/>
<arg type='I'/>
<arg type='Q'/>
<arg type='^?' function_pointer='true'>
<arg type='^{__CGEventTapProxy=}'/>
<arg type='I'/>
<arg type='^{__CGEvent=}'/>
<arg type='^v'/>
<retval type='^{__CGEvent=}'/>
</arg>
<arg type='^v'/>
<retval type='^{__CFMachPort=}' already_retained='true'/>
</function>
<function name='CGEventTapEnable'>
<arg type='^{__CFMachPort=}'/>
<arg type='B'/>
</function>
<function name='CGEventTapIsEnabled'>
<arg type='^{__CFMachPort=}'/>
<retval type='B'/>
</function>
<function name='CGEventTapPostEvent'>
<arg type='^{__CGEventTapProxy=}'/>
<arg type='^{__CGEvent=}'/>
</function>
<function name='CGFontCanCreatePostScriptSubset'>
<arg type='^{CGFont=}'/>
<arg type='i'/>
<retval type='B'/>
</function>
<function name='CGFontCopyFullName'>
<arg type='^{CGFont=}'/>
<retval type='^{__CFString=}' already_retained='true'/>
</function>
<function name='CGFontCopyGlyphNameForGlyph'>
<arg type='^{CGFont=}'/>
<arg type='S'/>
<retval type='^{__CFString=}' already_retained='true'/>
</function>
<function name='CGFontCopyPostScriptName'>
<arg type='^{CGFont=}'/>
<retval type='^{__CFString=}' already_retained='true'/>
</function>
<function name='CGFontCopyTableForTag'>
<arg type='^{CGFont=}'/>
<arg type='I'/>
<retval type='^{__CFData=}' already_retained='true'/>
</function>
<function name='CGFontCopyTableTags'>
<arg type='^{CGFont=}'/>
<retval type='^{__CFArray=}' already_retained='true'/>
</function>
<function name='CGFontCopyVariationAxes'>
<arg type='^{CGFont=}'/>
<retval type='^{__CFArray=}' already_retained='true'/>
</function>
<function name='CGFontCopyVariations'>
<arg type='^{CGFont=}'/>
<retval type='^{__CFDictionary=}' already_retained='true'/>
</function>
<function name='CGFontCreateCopyWithVariations'>
<arg type='^{CGFont=}'/>
<arg type='^{__CFDictionary=}'/>
<retval type='^{CGFont=}' already_retained='true'/>
</function>
<function name='CGFontCreatePostScriptEncoding'>
<arg type='^{CGFont=}'/>
<arg type='^S'/>
<retval type='^{__CFData=}' already_retained='true'/>
</function>
<function name='CGFontCreatePostScriptSubset'>
<arg type='^{CGFont=}'/>
<arg type='^{__CFString=}'/>
<arg type='i'/>
<arg type='^S'/>
<arg type='L' type64='Q'/>
<arg type='^S'/>
<retval type='^{__CFData=}' already_retained='true'/>
</function>
<function name='CGFontCreateWithDataProvider'>
<arg type='^{CGDataProvider=}'/>
<retval type='^{CGFont=}' already_retained='true'/>
</function>
<function name='CGFontCreateWithFontName'>
<arg type='^{__CFString=}'/>
<retval type='^{CGFont=}' already_retained='true'/>
</function>
<function name='CGFontCreateWithPlatformFont'>
<arg type='^v'/>
<retval type='^{CGFont=}' already_retained='true'/>
</function>
<function name='CGFontGetAscent'>
<arg type='^{CGFont=}'/>
<retval type='i'/>
</function>
<function name='CGFontGetCapHeight'>
<arg type='^{CGFont=}'/>
<retval type='i'/>
</function>
<function name='CGFontGetDescent'>
<arg type='^{CGFont=}'/>
<retval type='i'/>
</function>
<function name='CGFontGetFontBBox'>
<arg type='^{CGFont=}'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGFontGetGlyphAdvances'>
<arg type='^{CGFont=}'/>
<arg type='^S'/>
<arg type='L' type64='Q'/>
<arg type='^i'/>
<retval type='B'/>
</function>
<function name='CGFontGetGlyphBBoxes'>
<arg type='^{CGFont=}'/>
<arg type='^S'/>
<arg type='L' type64='Q'/>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='B'/>
</function>
<function name='CGFontGetGlyphWithGlyphName'>
<arg type='^{CGFont=}'/>
<arg type='^{__CFString=}'/>
<retval type='S'/>
</function>
<function name='CGFontGetItalicAngle'>
<arg type='^{CGFont=}'/>
<retval type='f' type64='d'/>
</function>
<function name='CGFontGetLeading'>
<arg type='^{CGFont=}'/>
<retval type='i'/>
</function>
<function name='CGFontGetNumberOfGlyphs'>
<arg type='^{CGFont=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGFontGetStemV'>
<arg type='^{CGFont=}'/>
<retval type='f' type64='d'/>
</function>
<function name='CGFontGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGFontGetUnitsPerEm'>
<arg type='^{CGFont=}'/>
<retval type='i'/>
</function>
<function name='CGFontGetXHeight'>
<arg type='^{CGFont=}'/>
<retval type='i'/>
</function>
<function name='CGFontRelease'>
<arg type='^{CGFont=}'/>
</function>
<function name='CGFontRetain'>
<arg type='^{CGFont=}'/>
<retval type='^{CGFont=}'/>
</function>
<function name='CGFunctionCreate'>
<arg type='^v'/>
<arg type='L' type64='Q'/>
<arg type='^f' type64='^d'/>
<arg type='L' type64='Q'/>
<arg type='^f' type64='^d'/>
<arg type='^{CGFunctionCallbacks=I^?^?}'/>
<retval type='^{CGFunction=}' already_retained='true'/>
</function>
<function name='CGFunctionGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGFunctionRelease'>
<arg type='^{CGFunction=}'/>
</function>
<function name='CGFunctionRetain'>
<arg type='^{CGFunction=}'/>
<retval type='^{CGFunction=}'/>
</function>
<function name='CGGLContextCreate'>
<arg type='^v'/>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg type='^{CGColorSpace=}'/>
<retval type='^{CGContext=}' already_retained='true'/>
</function>
<function name='CGGLContextUpdateViewportSize'>
<arg type='^{CGContext=}'/>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
</function>
<function name='CGGetActiveDisplayList'>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='CGGetDisplayTransferByFormula'>
<arg type='I'/>
<arg type='^f'/>
<arg type='^f'/>
<arg type='^f'/>
<arg type='^f'/>
<arg type='^f'/>
<arg type='^f'/>
<arg type='^f'/>
<arg type='^f'/>
<arg type='^f'/>
<retval type='i'/>
</function>
<function name='CGGetDisplayTransferByTable'>
<arg type='I'/>
<arg type='I'/>
<arg type='^f'/>
<arg type='^f'/>
<arg type='^f'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='CGGetDisplaysWithOpenGLDisplayMask'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='CGGetDisplaysWithPoint'>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='CGGetDisplaysWithRect'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='CGGetEventTapList'>
<arg type='I'/>
<arg type='^{__CGEventTapInformation=IIIQiiBfff}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='CGGetLastMouseDelta'>
<arg type='^i'/>
<arg type='^i'/>
</function>
<function name='CGGetOnlineDisplayList'>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='CGGradientCreateWithColorComponents'>
<arg type='^{CGColorSpace=}'/>
<arg type='^f' type64='^d'/>
<arg type='^f' type64='^d'/>
<arg type='L' type64='Q'/>
<retval type='^{CGGradient=}' already_retained='true'/>
</function>
<function name='CGGradientCreateWithColors'>
<arg type='^{CGColorSpace=}'/>
<arg type='^{__CFArray=}'/>
<arg type='^f' type64='^d'/>
<retval type='^{CGGradient=}' already_retained='true'/>
</function>
<function name='CGGradientGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGGradientRelease'>
<arg type='^{CGGradient=}'/>
</function>
<function name='CGGradientRetain'>
<arg type='^{CGGradient=}'/>
<retval type='^{CGGradient=}'/>
</function>
<function name='CGImageCreate'>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='^{CGColorSpace=}'/>
<arg type='I'/>
<arg type='^{CGDataProvider=}'/>
<arg type='^f' type64='^d'/>
<arg type='B'/>
<arg type='i'/>
<retval type='^{CGImage=}' already_retained='true'/>
</function>
<function name='CGImageCreateCopy'>
<arg type='^{CGImage=}'/>
<retval type='^{CGImage=}' already_retained='true'/>
</function>
<function name='CGImageCreateCopyWithColorSpace'>
<arg type='^{CGImage=}'/>
<arg type='^{CGColorSpace=}'/>
<retval type='^{CGImage=}' already_retained='true'/>
</function>
<function name='CGImageCreateWithImageInRect'>
<arg type='^{CGImage=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='^{CGImage=}' already_retained='true'/>
</function>
<function name='CGImageCreateWithJPEGDataProvider'>
<arg type='^{CGDataProvider=}'/>
<arg type='^f' type64='^d'/>
<arg type='B'/>
<arg type='i'/>
<retval type='^{CGImage=}' already_retained='true'/>
</function>
<function name='CGImageCreateWithMask'>
<arg type='^{CGImage=}'/>
<arg type='^{CGImage=}'/>
<retval type='^{CGImage=}' already_retained='true'/>
</function>
<function name='CGImageCreateWithMaskingColors'>
<arg type='^{CGImage=}'/>
<arg type='^f' type64='^d'/>
<retval type='^{CGImage=}' already_retained='true'/>
</function>
<function name='CGImageCreateWithPNGDataProvider'>
<arg type='^{CGDataProvider=}'/>
<arg type='^f' type64='^d'/>
<arg type='B'/>
<arg type='i'/>
<retval type='^{CGImage=}' already_retained='true'/>
</function>
<function name='CGImageGetAlphaInfo'>
<arg type='^{CGImage=}'/>
<retval type='i'/>
</function>
<function name='CGImageGetBitmapInfo'>
<arg type='^{CGImage=}'/>
<retval type='I'/>
</function>
<function name='CGImageGetBitsPerComponent'>
<arg type='^{CGImage=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGImageGetBitsPerPixel'>
<arg type='^{CGImage=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGImageGetBytesPerRow'>
<arg type='^{CGImage=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGImageGetColorSpace'>
<arg type='^{CGImage=}'/>
<retval type='^{CGColorSpace=}'/>
</function>
<function name='CGImageGetDataProvider'>
<arg type='^{CGImage=}'/>
<retval type='^{CGDataProvider=}'/>
</function>
<function name='CGImageGetDecode'>
<arg type='^{CGImage=}'/>
<retval type='^f' type64='^d'/>
</function>
<function name='CGImageGetHeight'>
<arg type='^{CGImage=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGImageGetRenderingIntent'>
<arg type='^{CGImage=}'/>
<retval type='i'/>
</function>
<function name='CGImageGetShouldInterpolate'>
<arg type='^{CGImage=}'/>
<retval type='B'/>
</function>
<function name='CGImageGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGImageGetWidth'>
<arg type='^{CGImage=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGImageIsMask'>
<arg type='^{CGImage=}'/>
<retval type='B'/>
</function>
<function name='CGImageMaskCreate'>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='^{CGDataProvider=}'/>
<arg type='^f' type64='^d'/>
<arg type='B'/>
<retval type='^{CGImage=}' already_retained='true'/>
</function>
<function name='CGImageRelease'>
<arg type='^{CGImage=}'/>
</function>
<function name='CGImageRetain'>
<arg type='^{CGImage=}'/>
<retval type='^{CGImage=}'/>
</function>
<function name='CGInhibitLocalEvents'>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='CGLayerCreateWithContext'>
<arg type='^{CGContext=}'/>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg type='^{__CFDictionary=}'/>
<retval type='^{CGLayer=}' already_retained='true'/>
</function>
<function name='CGLayerGetContext'>
<arg type='^{CGLayer=}'/>
<retval type='^{CGContext=}'/>
</function>
<function name='CGLayerGetSize'>
<arg type='^{CGLayer=}'/>
<retval type='{CGSize=ff}' type64='{CGSize=dd}'/>
</function>
<function name='CGLayerGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGLayerRelease'>
<arg type='^{CGLayer=}'/>
</function>
<function name='CGLayerRetain'>
<arg type='^{CGLayer=}'/>
<retval type='^{CGLayer=}'/>
</function>
<function name='CGMainDisplayID'>
<retval type='I'/>
</function>
<function name='CGOpenGLDisplayMaskToDisplayID'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CGPDFArrayGetArray'>
<arg type='^{CGPDFArray=}'/>
<arg type='L' type64='Q'/>
<arg type='^^{CGPDFArray}'/>
<retval type='B'/>
</function>
<function name='CGPDFArrayGetBoolean'>
<arg type='^{CGPDFArray=}'/>
<arg type='L' type64='Q'/>
<arg type='*'/>
<retval type='B'/>
</function>
<function name='CGPDFArrayGetCount'>
<arg type='^{CGPDFArray=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGPDFArrayGetDictionary'>
<arg type='^{CGPDFArray=}'/>
<arg type='L' type64='Q'/>
<arg type='^^{CGPDFDictionary}'/>
<retval type='B'/>
</function>
<function name='CGPDFArrayGetInteger'>
<arg type='^{CGPDFArray=}'/>
<arg type='L' type64='Q'/>
<arg type='^i' type64='^q'/>
<retval type='B'/>
</function>
<function name='CGPDFArrayGetName'>
<arg type='^{CGPDFArray=}'/>
<arg type='L' type64='Q'/>
<arg type='^*'/>
<retval type='B'/>
</function>
<function name='CGPDFArrayGetNull'>
<arg type='^{CGPDFArray=}'/>
<arg type='L' type64='Q'/>
<retval type='B'/>
</function>
<function name='CGPDFArrayGetNumber'>
<arg type='^{CGPDFArray=}'/>
<arg type='L' type64='Q'/>
<arg type='^f' type64='^d'/>
<retval type='B'/>
</function>
<function name='CGPDFArrayGetObject'>
<arg type='^{CGPDFArray=}'/>
<arg type='L' type64='Q'/>
<arg type='^^(CGPDFObject)'/>
<retval type='B'/>
</function>
<function name='CGPDFArrayGetStream'>
<arg type='^{CGPDFArray=}'/>
<arg type='L' type64='Q'/>
<arg type='^^{CGPDFStream}'/>
<retval type='B'/>
</function>
<function name='CGPDFArrayGetString'>
<arg type='^{CGPDFArray=}'/>
<arg type='L' type64='Q'/>
<arg type='^^{CGPDFString}'/>
<retval type='B'/>
</function>
<function name='CGPDFContentStreamCreateWithPage'>
<arg type='^{CGPDFPage=}'/>
<retval type='^{CGPDFContentStream=}' already_retained='true'/>
</function>
<function name='CGPDFContentStreamCreateWithStream'>
<arg type='^{CGPDFStream=}'/>
<arg type='^{CGPDFDictionary=}'/>
<arg type='^{CGPDFContentStream=}'/>
<retval type='^{CGPDFContentStream=}' already_retained='true'/>
</function>
<function name='CGPDFContentStreamGetResource'>
<arg type='^{CGPDFContentStream=}'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^(CGPDFObject=)'/>
</function>
<function name='CGPDFContentStreamGetStreams'>
<arg type='^{CGPDFContentStream=}'/>
<retval type='^{__CFArray=}'/>
</function>
<function name='CGPDFContentStreamRelease'>
<arg type='^{CGPDFContentStream=}'/>
</function>
<function name='CGPDFContentStreamRetain'>
<arg type='^{CGPDFContentStream=}'/>
<retval type='^{CGPDFContentStream=}'/>
</function>
<function name='CGPDFContextAddDestinationAtPoint'>
<arg type='^{CGContext=}'/>
<arg type='^{__CFString=}'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='CGPDFContextAddDocumentMetadata'>
<arg type='^{CGContext=}'/>
<arg type='^{__CFData=}'/>
</function>
<function name='CGPDFContextBeginPage'>
<arg type='^{CGContext=}'/>
<arg type='^{__CFDictionary=}'/>
</function>
<function name='CGPDFContextClose'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGPDFContextCreate'>
<arg type='^{CGDataConsumer=}'/>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^{__CFDictionary=}'/>
<retval type='^{CGContext=}' already_retained='true'/>
</function>
<function name='CGPDFContextCreateWithURL'>
<arg type='^{__CFURL=}'/>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^{__CFDictionary=}'/>
<retval type='^{CGContext=}' already_retained='true'/>
</function>
<function name='CGPDFContextEndPage'>
<arg type='^{CGContext=}'/>
</function>
<function name='CGPDFContextSetDestinationForRect'>
<arg type='^{CGContext=}'/>
<arg type='^{__CFString=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGPDFContextSetURLForRect'>
<arg type='^{CGContext=}'/>
<arg type='^{__CFURL=}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGPDFDictionaryApplyFunction'>
<arg type='^{CGPDFDictionary=}'/>
<arg type='^?' function_pointer='true'>
<arg type='*'/>
<arg type='^(CGPDFObject=)'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='^v'/>
</function>
<function name='CGPDFDictionaryGetArray'>
<arg type='^{CGPDFDictionary=}'/>
<arg type='*'/>
<arg type='^^{CGPDFArray}'/>
<retval type='B'/>
</function>
<function name='CGPDFDictionaryGetBoolean'>
<arg type='^{CGPDFDictionary=}'/>
<arg type='*'/>
<arg type='*'/>
<retval type='B'/>
</function>
<function name='CGPDFDictionaryGetCount'>
<arg type='^{CGPDFDictionary=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGPDFDictionaryGetDictionary'>
<arg type='^{CGPDFDictionary=}'/>
<arg type='*'/>
<arg type='^^{CGPDFDictionary}'/>
<retval type='B'/>
</function>
<function name='CGPDFDictionaryGetInteger'>
<arg type='^{CGPDFDictionary=}'/>
<arg type='*'/>
<arg type='^i' type64='^q'/>
<retval type='B'/>
</function>
<function name='CGPDFDictionaryGetName'>
<arg type='^{CGPDFDictionary=}'/>
<arg type='*'/>
<arg type='^*'/>
<retval type='B'/>
</function>
<function name='CGPDFDictionaryGetNumber'>
<arg type='^{CGPDFDictionary=}'/>
<arg type='*'/>
<arg type='^f' type64='^d'/>
<retval type='B'/>
</function>
<function name='CGPDFDictionaryGetObject'>
<arg type='^{CGPDFDictionary=}'/>
<arg type='*'/>
<arg type='^^(CGPDFObject)'/>
<retval type='B'/>
</function>
<function name='CGPDFDictionaryGetStream'>
<arg type='^{CGPDFDictionary=}'/>
<arg type='*'/>
<arg type='^^{CGPDFStream}'/>
<retval type='B'/>
</function>
<function name='CGPDFDictionaryGetString'>
<arg type='^{CGPDFDictionary=}'/>
<arg type='*'/>
<arg type='^^{CGPDFString}'/>
<retval type='B'/>
</function>
<function name='CGPDFDocumentAllowsCopying'>
<arg type='^{CGPDFDocument=}'/>
<retval type='B'/>
</function>
<function name='CGPDFDocumentAllowsPrinting'>
<arg type='^{CGPDFDocument=}'/>
<retval type='B'/>
</function>
<function name='CGPDFDocumentCreateWithProvider'>
<arg type='^{CGDataProvider=}'/>
<retval type='^{CGPDFDocument=}' already_retained='true'/>
</function>
<function name='CGPDFDocumentCreateWithURL'>
<arg type='^{__CFURL=}'/>
<retval type='^{CGPDFDocument=}' already_retained='true'/>
</function>
<function name='CGPDFDocumentGetArtBox'>
<arg type='^{CGPDFDocument=}'/>
<arg type='i'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGPDFDocumentGetBleedBox'>
<arg type='^{CGPDFDocument=}'/>
<arg type='i'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGPDFDocumentGetCatalog'>
<arg type='^{CGPDFDocument=}'/>
<retval type='^{CGPDFDictionary=}'/>
</function>
<function name='CGPDFDocumentGetCropBox'>
<arg type='^{CGPDFDocument=}'/>
<arg type='i'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGPDFDocumentGetID'>
<arg type='^{CGPDFDocument=}'/>
<retval type='^{CGPDFArray=}'/>
</function>
<function name='CGPDFDocumentGetInfo'>
<arg type='^{CGPDFDocument=}'/>
<retval type='^{CGPDFDictionary=}'/>
</function>
<function name='CGPDFDocumentGetMediaBox'>
<arg type='^{CGPDFDocument=}'/>
<arg type='i'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGPDFDocumentGetNumberOfPages'>
<arg type='^{CGPDFDocument=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGPDFDocumentGetPage'>
<arg type='^{CGPDFDocument=}'/>
<arg type='L' type64='Q'/>
<retval type='^{CGPDFPage=}'/>
</function>
<function name='CGPDFDocumentGetRotationAngle'>
<arg type='^{CGPDFDocument=}'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='CGPDFDocumentGetTrimBox'>
<arg type='^{CGPDFDocument=}'/>
<arg type='i'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGPDFDocumentGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGPDFDocumentGetVersion'>
<arg type='^{CGPDFDocument=}'/>
<arg type='^i'/>
<arg type='^i'/>
</function>
<function name='CGPDFDocumentIsEncrypted'>
<arg type='^{CGPDFDocument=}'/>
<retval type='B'/>
</function>
<function name='CGPDFDocumentIsUnlocked'>
<arg type='^{CGPDFDocument=}'/>
<retval type='B'/>
</function>
<function name='CGPDFDocumentRelease'>
<arg type='^{CGPDFDocument=}'/>
</function>
<function name='CGPDFDocumentRetain'>
<arg type='^{CGPDFDocument=}'/>
<retval type='^{CGPDFDocument=}'/>
</function>
<function name='CGPDFDocumentUnlockWithPassword'>
<arg type='^{CGPDFDocument=}'/>
<arg type='*'/>
<retval type='B'/>
</function>
<function name='CGPDFObjectGetType'>
<arg type='^(CGPDFObject=)'/>
<retval type='i'/>
</function>
<function name='CGPDFObjectGetValue'>
<arg type='^(CGPDFObject=)'/>
<arg type='i'/>
<arg type='^v'/>
<retval type='B'/>
</function>
<function name='CGPDFOperatorTableCreate'>
<retval type='^{CGPDFOperatorTable=}' already_retained='true'/>
</function>
<function name='CGPDFOperatorTableRelease'>
<arg type='^{CGPDFOperatorTable=}'/>
</function>
<function name='CGPDFOperatorTableRetain'>
<arg type='^{CGPDFOperatorTable=}'/>
<retval type='^{CGPDFOperatorTable=}'/>
</function>
<function name='CGPDFOperatorTableSetCallback'>
<arg type='^{CGPDFOperatorTable=}'/>
<arg type='*'/>
<arg type='^?' function_pointer='true'>
<arg type='^{CGPDFScanner=}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
</function>
<function name='CGPDFPageGetBoxRect'>
<arg type='^{CGPDFPage=}'/>
<arg type='i'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGPDFPageGetDictionary'>
<arg type='^{CGPDFPage=}'/>
<retval type='^{CGPDFDictionary=}'/>
</function>
<function name='CGPDFPageGetDocument'>
<arg type='^{CGPDFPage=}'/>
<retval type='^{CGPDFDocument=}'/>
</function>
<function name='CGPDFPageGetDrawingTransform'>
<arg type='^{CGPDFPage=}'/>
<arg type='i'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='i'/>
<arg type='B'/>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CGPDFPageGetPageNumber'>
<arg type='^{CGPDFPage=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGPDFPageGetRotationAngle'>
<arg type='^{CGPDFPage=}'/>
<retval type='i'/>
</function>
<function name='CGPDFPageGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGPDFPageRelease'>
<arg type='^{CGPDFPage=}'/>
</function>
<function name='CGPDFPageRetain'>
<arg type='^{CGPDFPage=}'/>
<retval type='^{CGPDFPage=}'/>
</function>
<function name='CGPDFScannerCreate'>
<arg type='^{CGPDFContentStream=}'/>
<arg type='^{CGPDFOperatorTable=}'/>
<arg type='^v'/>
<retval type='^{CGPDFScanner=}' already_retained='true'/>
</function>
<function name='CGPDFScannerGetContentStream'>
<arg type='^{CGPDFScanner=}'/>
<retval type='^{CGPDFContentStream=}'/>
</function>
<function name='CGPDFScannerPopArray'>
<arg type='^{CGPDFScanner=}'/>
<arg type='^^{CGPDFArray}'/>
<retval type='B'/>
</function>
<function name='CGPDFScannerPopBoolean'>
<arg type='^{CGPDFScanner=}'/>
<arg type='*'/>
<retval type='B'/>
</function>
<function name='CGPDFScannerPopDictionary'>
<arg type='^{CGPDFScanner=}'/>
<arg type='^^{CGPDFDictionary}'/>
<retval type='B'/>
</function>
<function name='CGPDFScannerPopInteger'>
<arg type='^{CGPDFScanner=}'/>
<arg type='^i' type64='^q'/>
<retval type='B'/>
</function>
<function name='CGPDFScannerPopName'>
<arg type='^{CGPDFScanner=}'/>
<arg type='^*'/>
<retval type='B'/>
</function>
<function name='CGPDFScannerPopNumber'>
<arg type='^{CGPDFScanner=}'/>
<arg type='^f' type64='^d'/>
<retval type='B'/>
</function>
<function name='CGPDFScannerPopObject'>
<arg type='^{CGPDFScanner=}'/>
<arg type='^^(CGPDFObject)'/>
<retval type='B'/>
</function>
<function name='CGPDFScannerPopStream'>
<arg type='^{CGPDFScanner=}'/>
<arg type='^^{CGPDFStream}'/>
<retval type='B'/>
</function>
<function name='CGPDFScannerPopString'>
<arg type='^{CGPDFScanner=}'/>
<arg type='^^{CGPDFString}'/>
<retval type='B'/>
</function>
<function name='CGPDFScannerRelease'>
<arg type='^{CGPDFScanner=}'/>
</function>
<function name='CGPDFScannerRetain'>
<arg type='^{CGPDFScanner=}'/>
<retval type='^{CGPDFScanner=}'/>
</function>
<function name='CGPDFScannerScan'>
<arg type='^{CGPDFScanner=}'/>
<retval type='B'/>
</function>
<function name='CGPDFStreamCopyData'>
<arg type='^{CGPDFStream=}'/>
<arg type='^i'/>
<retval type='^{__CFData=}' already_retained='true'/>
</function>
<function name='CGPDFStreamGetDictionary'>
<arg type='^{CGPDFStream=}'/>
<retval type='^{CGPDFDictionary=}'/>
</function>
<function name='CGPDFStringCopyDate'>
<arg type='^{CGPDFString=}'/>
<retval type='^{__CFDate=}' already_retained='true'/>
</function>
<function name='CGPDFStringCopyTextString'>
<arg type='^{CGPDFString=}'/>
<retval type='^{__CFString=}' already_retained='true'/>
</function>
<function name='CGPDFStringGetBytePtr'>
<arg type='^{CGPDFString=}'/>
<retval type='*'/>
</function>
<function name='CGPDFStringGetLength'>
<arg type='^{CGPDFString=}'/>
<retval type='L' type64='Q'/>
</function>
<function name='CGPSConverterAbort'>
<arg type='^{CGPSConverter=}'/>
<retval type='B'/>
</function>
<function name='CGPSConverterConvert'>
<arg type='^{CGPSConverter=}'/>
<arg type='^{CGDataProvider=}'/>
<arg type='^{CGDataConsumer=}'/>
<arg type='^{__CFDictionary=}'/>
<retval type='B'/>
</function>
<function name='CGPSConverterCreate'>
<arg type='^v'/>
<arg type='^{CGPSConverterCallbacks=I^?^?^?^?^?^?^?}'/>
<arg type='^{__CFDictionary=}'/>
<retval type='^{CGPSConverter=}' already_retained='true'/>
</function>
<function name='CGPSConverterGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGPSConverterIsConverting'>
<arg type='^{CGPSConverter=}'/>
<retval type='B'/>
</function>
<function name='CGPaletteCreateCopy'>
<arg type='^{_CGDirectPaletteRef=}'/>
<retval type='^{_CGDirectPaletteRef=}' already_retained='true'/>
</function>
<function name='CGPaletteCreateDefaultColorPalette'>
<retval type='^{_CGDirectPaletteRef=}' already_retained='true'/>
</function>
<function name='CGPaletteCreateFromPaletteBlendedWithColor'>
<arg type='^{_CGDirectPaletteRef=}'/>
<arg type='f'/>
<arg type='{CGDeviceColor=fff}'/>
<retval type='^{_CGDirectPaletteRef=}' already_retained='true'/>
</function>
<function name='CGPaletteCreateWithByteSamples'>
<arg type='^{CGDeviceByteColor=CCC}'/>
<arg type='I'/>
<retval type='^{_CGDirectPaletteRef=}' already_retained='true'/>
</function>
<function name='CGPaletteCreateWithCapacity'>
<arg type='I'/>
<retval type='^{_CGDirectPaletteRef=}' already_retained='true'/>
</function>
<function name='CGPaletteCreateWithDisplay'>
<arg type='I'/>
<retval type='^{_CGDirectPaletteRef=}' already_retained='true'/>
</function>
<function name='CGPaletteCreateWithSamples'>
<arg type='^{CGDeviceColor=fff}'/>
<arg type='I'/>
<retval type='^{_CGDirectPaletteRef=}' already_retained='true'/>
</function>
<function name='CGPaletteGetColorAtIndex'>
<arg type='^{_CGDirectPaletteRef=}'/>
<arg type='I'/>
<retval type='{CGDeviceColor=fff}'/>
</function>
<function name='CGPaletteGetIndexForColor'>
<arg type='^{_CGDirectPaletteRef=}'/>
<arg type='{CGDeviceColor=fff}'/>
<retval type='I'/>
</function>
<function name='CGPaletteGetNumberOfSamples'>
<arg type='^{_CGDirectPaletteRef=}'/>
<retval type='I'/>
</function>
<function name='CGPaletteIsEqualToPalette'>
<arg type='^{_CGDirectPaletteRef=}'/>
<arg type='^{_CGDirectPaletteRef=}'/>
<retval type='B'/>
</function>
<function name='CGPaletteRelease'>
<arg type='^{_CGDirectPaletteRef=}'/>
</function>
<function name='CGPaletteSetColorAtIndex'>
<arg type='^{_CGDirectPaletteRef=}'/>
<arg type='{CGDeviceColor=fff}'/>
<arg type='I'/>
</function>
<function name='CGPathAddArc'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='B'/>
</function>
<function name='CGPathAddArcToPoint'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGPathAddCurveToPoint'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGPathAddEllipseInRect'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGPathAddLineToPoint'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGPathAddLines'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg type='^{CGPoint=ff}' type64='^{CGPoint=dd}'/>
<arg type='L' type64='Q'/>
</function>
<function name='CGPathAddPath'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg type='^{CGPath=}'/>
</function>
<function name='CGPathAddQuadCurveToPoint'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGPathAddRect'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGPathAddRects'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='L' type64='Q'/>
</function>
<function name='CGPathAddRelativeArc'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGPathApply'>
<arg type='^{CGPath=}'/>
<arg type='^v'/>
<arg type='^?' function_pointer='true'>
<arg type='^v'/>
<arg type='^{CGPathElement=i^{CGPoint}}'/>
<retval type='v'/>
</arg>
</function>
<function name='CGPathCloseSubpath'>
<arg type='^{CGPath=}'/>
</function>
<function name='CGPathContainsPoint'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='B'/>
<retval type='B'/>
</function>
<function name='CGPathCreateCopy'>
<arg type='^{CGPath=}'/>
<retval type='^{CGPath=}' already_retained='true'/>
</function>
<function name='CGPathCreateCopyByDashingPath'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg type='f' type64='d'/>
<arg type='^f' type64='^d'/>
<arg type='L' type64='Q'/>
<retval type='^{CGPath=}' already_retained='true'/>
</function>
<function name='CGPathCreateCopyByStrokingPath'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg type='f' type64='d'/>
<arg type='i'/>
<arg type='i'/>
<arg type='f' type64='d'/>
<retval type='^{CGPath=}' already_retained='true'/>
</function>
<function name='CGPathCreateCopyByTransformingPath'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<retval type='^{CGPath=}' already_retained='true'/>
</function>
<function name='CGPathCreateMutable'>
<retval type='^{CGPath=}' already_retained='true'/>
</function>
<function name='CGPathCreateMutableCopy'>
<arg type='^{CGPath=}'/>
<retval type='^{CGPath=}' already_retained='true'/>
</function>
<function name='CGPathCreateMutableCopyByTransformingPath'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<retval type='^{CGPath=}' already_retained='true'/>
</function>
<function name='CGPathCreateWithEllipseInRect'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<retval type='^{CGPath=}' already_retained='true'/>
</function>
<function name='CGPathCreateWithRect'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<retval type='^{CGPath=}' already_retained='true'/>
</function>
<function name='CGPathEqualToPath'>
<arg type='^{CGPath=}'/>
<arg type='^{CGPath=}'/>
<retval type='B'/>
</function>
<function name='CGPathGetBoundingBox'>
<arg type='^{CGPath=}'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGPathGetCurrentPoint'>
<arg type='^{CGPath=}'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='CGPathGetPathBoundingBox'>
<arg type='^{CGPath=}'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGPathGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGPathIsEmpty'>
<arg type='^{CGPath=}'/>
<retval type='B'/>
</function>
<function name='CGPathIsRect'>
<arg type='^{CGPath=}'/>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='B'/>
</function>
<function name='CGPathMoveToPoint'>
<arg type='^{CGPath=}'/>
<arg type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
</function>
<function name='CGPathRelease'>
<arg type='^{CGPath=}'/>
</function>
<function name='CGPathRetain'>
<arg type='^{CGPath=}'/>
<retval type='^{CGPath=}'/>
</function>
<function name='CGPatternCreate'>
<arg type='^v'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='i'/>
<arg type='B'/>
<arg type='^{CGPatternCallbacks=I^?^?}'/>
<retval type='^{CGPattern=}' already_retained='true'/>
</function>
<function name='CGPatternGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGPatternRelease'>
<arg type='^{CGPattern=}'/>
</function>
<function name='CGPatternRetain'>
<arg type='^{CGPattern=}'/>
<retval type='^{CGPattern=}'/>
</function>
<function name='CGPointApplyAffineTransform'>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='CGPointCreateDictionaryRepresentation'>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval type='^{__CFDictionary=}' already_retained='true'/>
</function>
<function name='CGPointEqualToPoint'>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval type='B'/>
</function>
<function name='CGPointMake' inline='true'>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='CGPointMakeWithDictionaryRepresentation'>
<arg type='^{__CFDictionary=}'/>
<arg type='^{CGPoint=ff}' type64='^{CGPoint=dd}'/>
<retval type='B'/>
</function>
<function name='CGPostKeyboardEvent'>
<arg type='S'/>
<arg type='S'/>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function variadic='true' name='CGPostMouseEvent'>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='i' type64='I'/>
<arg type='I'/>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function variadic='true' name='CGPostScrollWheelEvent'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='CGRectApplyAffineTransform'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGRectContainsPoint'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval type='B'/>
</function>
<function name='CGRectContainsRect'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='B'/>
</function>
<function name='CGRectCreateDictionaryRepresentation'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='^{__CFDictionary=}' already_retained='true'/>
</function>
<function name='CGRectDivide'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='f' type64='d'/>
<arg type='i'/>
</function>
<function name='CGRectEqualToRect'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='B'/>
</function>
<function name='CGRectGetHeight'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='f' type64='d'/>
</function>
<function name='CGRectGetMaxX'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='f' type64='d'/>
</function>
<function name='CGRectGetMaxY'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='f' type64='d'/>
</function>
<function name='CGRectGetMidX'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='f' type64='d'/>
</function>
<function name='CGRectGetMidY'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='f' type64='d'/>
</function>
<function name='CGRectGetMinX'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='f' type64='d'/>
</function>
<function name='CGRectGetMinY'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='f' type64='d'/>
</function>
<function name='CGRectGetWidth'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='f' type64='d'/>
</function>
<function name='CGRectInset'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGRectIntegral'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGRectIntersection'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGRectIntersectsRect'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='B'/>
</function>
<function name='CGRectIsEmpty'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='B'/>
</function>
<function name='CGRectIsInfinite'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='B'/>
</function>
<function name='CGRectIsNull'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='B'/>
</function>
<function name='CGRectMake' inline='true'>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGRectMakeWithDictionaryRepresentation'>
<arg type='^{__CFDictionary=}'/>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='B'/>
</function>
<function name='CGRectOffset'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGRectStandardize'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGRectUnion'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGRegisterScreenRefreshCallback'>
<arg type='^?' function_pointer='true'>
<arg type='I'/>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='^v'/>
<retval type='i'/>
</function>
<function name='CGReleaseAllDisplays'>
<retval type='i'/>
</function>
<function name='CGReleaseDisplayFadeReservation'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CGReleaseScreenRefreshRects'>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CGRestorePermanentDisplayConfiguration'/>
<function name='CGScreenRegisterMoveCallback'>
<arg type='^?' function_pointer='true'>
<arg type='{CGScreenUpdateMoveDelta=ii}'/>
<arg type='L' type64='Q'/>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='^v'/>
<retval type='i'/>
</function>
<function name='CGScreenUnregisterMoveCallback'>
<arg type='^?' function_pointer='true'>
<arg type='{CGScreenUpdateMoveDelta=ii}'/>
<arg type='L' type64='Q'/>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='^v'/>
</function>
<function name='CGSessionCopyCurrentDictionary'>
<retval type='^{__CFDictionary=}' already_retained='true'/>
</function>
<function name='CGSetDisplayTransferByByteTable'>
<arg type='I'/>
<arg type='I'/>
<arg type='*'/>
<arg type='*'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='CGSetDisplayTransferByFormula'>
<arg type='I'/>
<arg type='f'/>
<arg type='f'/>
<arg type='f'/>
<arg type='f'/>
<arg type='f'/>
<arg type='f'/>
<arg type='f'/>
<arg type='f'/>
<arg type='f'/>
<retval type='i'/>
</function>
<function name='CGSetDisplayTransferByTable'>
<arg type='I'/>
<arg type='I'/>
<arg type='^f'/>
<arg type='^f'/>
<arg type='^f'/>
<retval type='i'/>
</function>
<function name='CGSetLocalEventsFilterDuringSuppressionState'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CGSetLocalEventsSuppressionInterval'>
<arg type='d'/>
<retval type='i'/>
</function>
<function name='CGShadingCreateAxial'>
<arg type='^{CGColorSpace=}'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='^{CGFunction=}'/>
<arg type='B'/>
<arg type='B'/>
<retval type='^{CGShading=}' already_retained='true'/>
</function>
<function name='CGShadingCreateRadial'>
<arg type='^{CGColorSpace=}'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='f' type64='d'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='f' type64='d'/>
<arg type='^{CGFunction=}'/>
<arg type='B'/>
<arg type='B'/>
<retval type='^{CGShading=}' already_retained='true'/>
</function>
<function name='CGShadingGetTypeID'>
<retval type='L' type64='Q'/>
</function>
<function name='CGShadingRelease'>
<arg type='^{CGShading=}'/>
</function>
<function name='CGShadingRetain'>
<arg type='^{CGShading=}'/>
<retval type='^{CGShading=}'/>
</function>
<function name='CGShieldingWindowID'>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CGShieldingWindowLevel'>
<retval type='i'/>
</function>
<function name='CGSizeApplyAffineTransform'>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval type='{CGSize=ff}' type64='{CGSize=dd}'/>
</function>
<function name='CGSizeCreateDictionaryRepresentation'>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval type='^{__CFDictionary=}' already_retained='true'/>
</function>
<function name='CGSizeEqualToSize'>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval type='B'/>
</function>
<function name='CGSizeMake' inline='true'>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<retval type='{CGSize=ff}' type64='{CGSize=dd}'/>
</function>
<function name='CGSizeMakeWithDictionaryRepresentation'>
<arg type='^{__CFDictionary=}'/>
<arg type='^{CGSize=ff}' type64='^{CGSize=dd}'/>
<retval type='B'/>
</function>
<function name='CGUnregisterScreenRefreshCallback'>
<arg type='^?' function_pointer='true'>
<arg type='I'/>
<arg type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='^v'/>
</function>
<function name='CGWaitForScreenRefreshRects'>
<arg type='^^{CGRect}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='CGWaitForScreenUpdateRects'>
<arg type='I'/>
<arg type='^I'/>
<arg type='^^{CGRect}'/>
<arg type='^I' type64='^Q'/>
<arg type='^{CGScreenUpdateMoveDelta=ii}'/>
<retval type='i'/>
</function>
<function name='CGWarpMouseCursorPosition'>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval type='i'/>
</function>
<function name='CGWindowLevelForKey'>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='CGWindowListCopyWindowInfo'>
<arg type='I'/>
<arg type='I'/>
<retval type='^{__CFArray=}' already_retained='true'/>
</function>
<function name='CGWindowListCreate'>
<arg type='I'/>
<arg type='I'/>
<retval type='^{__CFArray=}' already_retained='true'/>
</function>
<function name='CGWindowListCreateDescriptionFromArray'>
<arg type='^{__CFArray=}'/>
<retval type='^{__CFArray=}' already_retained='true'/>
</function>
<function name='CGWindowListCreateImage'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='^{CGImage=}' already_retained='true'/>
</function>
<function name='CGWindowListCreateImageFromArray'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg type='^{__CFArray=}'/>
<arg type='I'/>
<retval type='^{CGImage=}' already_retained='true'/>
</function>
<function name='CGWindowServerCFMachPort'>
<retval type='^{__CFMachPort=}'/>
</function>
<function name='__CGAffineTransformMake' inline='true'>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<arg type='f' type64='d'/>
<retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='__CGPointApplyAffineTransform' inline='true'>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='__CGPointEqualToPoint' inline='true'>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval type='B'/>
</function>
<function name='__CGSizeApplyAffineTransform' inline='true'>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval type='{CGSize=ff}' type64='{CGSize=dd}'/>
</function>
<function name='__CGSizeEqualToSize' inline='true'>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval type='B'/>
</function>
<function_alias name='CGAffineTransformMake' original='__CGAffineTransformMake'/>
<function_alias name='CGPointApplyAffineTransform' original='__CGPointApplyAffineTransform'/>
<function_alias name='CGPointEqualToPoint' original='__CGPointEqualToPoint'/>
<function_alias name='CGSizeApplyAffineTransform' original='__CGSizeApplyAffineTransform'/>
<function_alias name='CGSizeEqualToSize' original='__CGSizeEqualToSize'/>
</signatures>
