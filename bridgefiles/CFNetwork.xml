<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/SystemConfiguration.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<struct type64='{CFHostClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' name='CFHostClientContext' type='{CFHostClientContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'/>
<struct type64='{CFNetServiceClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' name='CFNetServiceClientContext' type='{CFNetServiceClientContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'/>
<cftype name='CFHTTPAuthenticationRef' tollfree='__NSCFType' type='^{_CFHTTPAuthentication=}' gettypeid_func='CFHTTPAuthenticationGetTypeID'/>
<cftype name='CFHTTPMessageRef' tollfree='__NSCFType' type='^{__CFHTTPMessage=}' gettypeid_func='CFHTTPMessageGetTypeID'/>
<cftype name='CFHostRef' tollfree='__NSCFType' type='^{__CFHost=}' gettypeid_func='CFHostGetTypeID'/>
<cftype name='CFNetDiagnosticRef' type='^{__CFNetDiagnostic=}'/>
<cftype name='CFNetServiceBrowserRef' tollfree='__NSCFType' type='^{__CFNetServiceBrowser=}' gettypeid_func='CFNetServiceBrowserGetTypeID'/>
<cftype name='CFNetServiceMonitorRef' tollfree='__NSCFType' type='^{__CFNetServiceMonitor=}' gettypeid_func='CFNetServiceMonitorGetTypeID'/>
<cftype name='CFNetServiceRef' tollfree='__NSCFType' type='^{__CFNetService=}' gettypeid_func='CFNetServiceGetTypeID'/>
<constant name='kCFDNSServiceFailureKey' type='^{__CFString=}'/>
<constant name='kCFErrorDomainCFNetwork' type='^{__CFString=}'/>
<constant name='kCFErrorDomainWinSock' type='^{__CFString=}'/>
<constant name='kCFFTPResourceGroup' type='^{__CFString=}'/>
<constant name='kCFFTPResourceLink' type='^{__CFString=}'/>
<constant name='kCFFTPResourceModDate' type='^{__CFString=}'/>
<constant name='kCFFTPResourceMode' type='^{__CFString=}'/>
<constant name='kCFFTPResourceName' type='^{__CFString=}'/>
<constant name='kCFFTPResourceOwner' type='^{__CFString=}'/>
<constant name='kCFFTPResourceSize' type='^{__CFString=}'/>
<constant name='kCFFTPResourceType' type='^{__CFString=}'/>
<constant name='kCFFTPStatusCodeKey' type='^{__CFString=}'/>
<constant name='kCFGetAddrInfoFailureKey' type='^{__CFString=}'/>
<constant name='kCFHTTPAuthenticationAccountDomain' type='^{__CFString=}'/>
<constant name='kCFHTTPAuthenticationPassword' type='^{__CFString=}'/>
<constant name='kCFHTTPAuthenticationSchemeBasic' type='^{__CFString=}'/>
<constant name='kCFHTTPAuthenticationSchemeDigest' type='^{__CFString=}'/>
<constant name='kCFHTTPAuthenticationSchemeKerberos' type='^{__CFString=}'/>
<constant name='kCFHTTPAuthenticationSchemeNTLM' type='^{__CFString=}'/>
<constant name='kCFHTTPAuthenticationSchemeNegotiate' type='^{__CFString=}'/>
<constant name='kCFHTTPAuthenticationSchemeNegotiate2' type='^{__CFString=}'/>
<constant name='kCFHTTPAuthenticationSchemeXMobileMeAuthToken' type='^{__CFString=}'/>
<constant name='kCFHTTPAuthenticationUsername' type='^{__CFString=}'/>
<constant name='kCFHTTPVersion1_0' type='^{__CFString=}'/>
<constant name='kCFHTTPVersion1_1' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesExceptionsList' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesExcludeSimpleHostnames' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesFTPEnable' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesFTPPassive' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesFTPPort' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesFTPProxy' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesGopherEnable' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesGopherPort' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesGopherProxy' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesHTTPEnable' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesHTTPPort' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesHTTPProxy' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesHTTPSEnable' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesHTTPSPort' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesHTTPSProxy' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesProxyAutoConfigEnable' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesProxyAutoConfigJavaScript' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesProxyAutoConfigURLString' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesProxyAutoDiscoveryEnable' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesRTSPEnable' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesRTSPPort' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesRTSPProxy' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesSOCKSEnable' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesSOCKSPort' type='^{__CFString=}'/>
<constant name='kCFNetworkProxiesSOCKSProxy' type='^{__CFString=}'/>
<constant name='kCFProxyAutoConfigurationHTTPResponseKey' type='^{__CFString=}'/>
<constant name='kCFProxyAutoConfigurationJavaScriptKey' type='^{__CFString=}'/>
<constant name='kCFProxyAutoConfigurationURLKey' type='^{__CFString=}'/>
<constant name='kCFProxyHostNameKey' type='^{__CFString=}'/>
<constant name='kCFProxyPasswordKey' type='^{__CFString=}'/>
<constant name='kCFProxyPortNumberKey' type='^{__CFString=}'/>
<constant name='kCFProxyTypeAutoConfigurationJavaScript' type='^{__CFString=}'/>
<constant name='kCFProxyTypeAutoConfigurationURL' type='^{__CFString=}'/>
<constant name='kCFProxyTypeFTP' type='^{__CFString=}'/>
<constant name='kCFProxyTypeHTTP' type='^{__CFString=}'/>
<constant name='kCFProxyTypeHTTPS' type='^{__CFString=}'/>
<constant name='kCFProxyTypeKey' type='^{__CFString=}'/>
<constant name='kCFProxyTypeNone' type='^{__CFString=}'/>
<constant name='kCFProxyTypeSOCKS' type='^{__CFString=}'/>
<constant name='kCFProxyUsernameKey' type='^{__CFString=}'/>
<constant name='kCFSOCKSNegotiationMethodKey' type='^{__CFString=}'/>
<constant name='kCFSOCKSStatusCodeKey' type='^{__CFString=}'/>
<constant name='kCFSOCKSVersionKey' type='^{__CFString=}'/>
<constant type64='i' name='kCFStreamErrorDomainFTP' type='l'/>
<constant type64='i' name='kCFStreamErrorDomainHTTP' type='l'/>
<constant type64='i' name='kCFStreamErrorDomainMach' type='l'/>
<constant type64='i' name='kCFStreamErrorDomainNetDB' type='l'/>
<constant type64='i' name='kCFStreamErrorDomainNetServices' type='l'/>
<constant name='kCFStreamErrorDomainSOCKS' type='i'/>
<constant name='kCFStreamErrorDomainSSL' type='i'/>
<constant type64='i' name='kCFStreamErrorDomainSystemConfiguration' type='l'/>
<constant type64='q' name='kCFStreamErrorDomainWinSock' type='l'/>
<constant name='kCFStreamNetworkServiceType' type='^{__CFString=}'/>
<constant name='kCFStreamNetworkServiceTypeBackground' type='^{__CFString=}'/>
<constant name='kCFStreamNetworkServiceTypeVideo' type='^{__CFString=}'/>
<constant name='kCFStreamNetworkServiceTypeVoIP' type='^{__CFString=}'/>
<constant name='kCFStreamNetworkServiceTypeVoice' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyFTPAttemptPersistentConnection' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyFTPFetchResourceInfo' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyFTPFileTransferOffset' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyFTPPassword' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyFTPProxy' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyFTPProxyHost' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyFTPProxyPassword' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyFTPProxyPort' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyFTPProxyUser' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyFTPResourceSize' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyFTPUsePassiveMode' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyFTPUserName' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyHTTPAttemptPersistentConnection' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyHTTPFinalRequest' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyHTTPFinalURL' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyHTTPProxy' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyHTTPProxyHost' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyHTTPProxyPort' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyHTTPRequestBytesWrittenCount' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyHTTPResponseHeader' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyHTTPSProxyHost' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyHTTPSProxyPort' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyHTTPShouldAutoredirect' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyProxyLocalBypass' type='^{__CFString=}'/>
<constant name='kCFStreamPropertySOCKSPassword' type='^{__CFString=}'/>
<constant name='kCFStreamPropertySOCKSProxy' type='^{__CFString=}'/>
<constant name='kCFStreamPropertySOCKSProxyHost' type='^{__CFString=}'/>
<constant name='kCFStreamPropertySOCKSProxyPort' type='^{__CFString=}'/>
<constant name='kCFStreamPropertySOCKSUser' type='^{__CFString=}'/>
<constant name='kCFStreamPropertySOCKSVersion' type='^{__CFString=}'/>
<constant name='kCFStreamPropertySSLPeerCertificates' type='^{__CFString=}'/>
<constant name='kCFStreamPropertySSLPeerTrust' type='^{__CFString=}'/>
<constant name='kCFStreamPropertySSLSettings' type='^{__CFString=}'/>
<constant name='kCFStreamPropertyShouldCloseNativeSocket' type='^{__CFString=}'/>
<constant name='kCFStreamPropertySocketRemoteHost' type='^{__CFString=}'/>
<constant name='kCFStreamPropertySocketRemoteNetService' type='^{__CFString=}'/>
<constant name='kCFStreamPropertySocketSecurityLevel' type='^{__CFString=}'/>
<constant name='kCFStreamSSLAllowsAnyRoot' type='^{__CFString=}'/>
<constant name='kCFStreamSSLAllowsExpiredCertificates' type='^{__CFString=}'/>
<constant name='kCFStreamSSLAllowsExpiredRoots' type='^{__CFString=}'/>
<constant name='kCFStreamSSLCertificates' type='^{__CFString=}'/>
<constant name='kCFStreamSSLIsServer' type='^{__CFString=}'/>
<constant name='kCFStreamSSLLevel' type='^{__CFString=}'/>
<constant name='kCFStreamSSLPeerName' type='^{__CFString=}'/>
<constant name='kCFStreamSSLValidatesCertificateChain' type='^{__CFString=}'/>
<constant name='kCFStreamSocketSOCKSVersion4' type='^{__CFString=}'/>
<constant name='kCFStreamSocketSOCKSVersion5' type='^{__CFString=}'/>
<constant name='kCFStreamSocketSecurityLevelNegotiatedSSL' type='^{__CFString=}'/>
<constant name='kCFStreamSocketSecurityLevelNone' type='^{__CFString=}'/>
<constant name='kCFStreamSocketSecurityLevelSSLv2' type='^{__CFString=}'/>
<constant name='kCFStreamSocketSecurityLevelSSLv3' type='^{__CFString=}'/>
<constant name='kCFStreamSocketSecurityLevelTLSv1' type='^{__CFString=}'/>
<constant name='kCFURLErrorFailingURLErrorKey' type='^{__CFString=}'/>
<constant name='kCFURLErrorFailingURLStringErrorKey' type='^{__CFString=}'/>
<enum value='300' name='kCFErrorHTTPAuthenticationTypeUnsupported'/>
<enum value='301' name='kCFErrorHTTPBadCredentials'/>
<enum value='307' name='kCFErrorHTTPBadProxyCredentials'/>
<enum value='305' name='kCFErrorHTTPBadURL'/>
<enum value='302' name='kCFErrorHTTPConnectionLost'/>
<enum value='303' name='kCFErrorHTTPParseFailure'/>
<enum value='306' name='kCFErrorHTTPProxyConnectionFailure'/>
<enum value='304' name='kCFErrorHTTPRedirectionLoopDetected'/>
<enum value='310' name='kCFErrorHTTPSProxyConnectionFailure'/>
<enum value='309' name='kCFErrorPACFileAuth'/>
<enum value='308' name='kCFErrorPACFileError'/>
<enum value='200' name='kCFFTPErrorUnexpectedStatusCode'/>
<enum value='-4000' name='kCFHTTPCookieCannotParseCookieFile'/>
<enum value='0' name='kCFHostAddresses'/>
<enum value='1' name='kCFHostErrorHostNotFound'/>
<enum value='2' name='kCFHostErrorUnknown'/>
<enum value='1' name='kCFHostNames'/>
<enum value='2' name='kCFHostReachability'/>
<enum value='-66557' name='kCFNetDiagnosticConnectionDown'/>
<enum value='-66558' name='kCFNetDiagnosticConnectionIndeterminate'/>
<enum value='-66559' name='kCFNetDiagnosticConnectionUp'/>
<enum value='-66560' name='kCFNetDiagnosticErr'/>
<enum value='0' name='kCFNetDiagnosticNoErr'/>
<enum value='-72004' name='kCFNetServiceErrorBadArgument'/>
<enum value='-72005' name='kCFNetServiceErrorCancel'/>
<enum value='-72001' name='kCFNetServiceErrorCollision'/>
<enum value='-73000' name='kCFNetServiceErrorDNSServiceFailure'/>
<enum value='-72003' name='kCFNetServiceErrorInProgress'/>
<enum value='-72006' name='kCFNetServiceErrorInvalid'/>
<enum value='-72002' name='kCFNetServiceErrorNotFound'/>
<enum value='-72007' name='kCFNetServiceErrorTimeout'/>
<enum value='-72000' name='kCFNetServiceErrorUnknown'/>
<enum value='4' name='kCFNetServiceFlagIsDefault'/>
<enum value='2' name='kCFNetServiceFlagIsDomain'/>
<enum value='4' name='kCFNetServiceFlagIsRegistrationDomain'/>
<enum value='1' name='kCFNetServiceFlagMoreComing'/>
<enum value='1' name='kCFNetServiceFlagNoAutoRename'/>
<enum value='8' name='kCFNetServiceFlagRemove'/>
<enum value='1' name='kCFNetServiceMonitorTXT'/>
<enum value='-72004' name='kCFNetServicesErrorBadArgument'/>
<enum value='-72005' name='kCFNetServicesErrorCancel'/>
<enum value='-72001' name='kCFNetServicesErrorCollision'/>
<enum value='-72003' name='kCFNetServicesErrorInProgress'/>
<enum value='-72006' name='kCFNetServicesErrorInvalid'/>
<enum value='-72002' name='kCFNetServicesErrorNotFound'/>
<enum value='-72007' name='kCFNetServicesErrorTimeout'/>
<enum value='-72000' name='kCFNetServicesErrorUnknown'/>
<enum value='112' name='kCFSOCKS4ErrorIdConflict'/>
<enum value='111' name='kCFSOCKS4ErrorIdentdFailed'/>
<enum value='110' name='kCFSOCKS4ErrorRequestFailed'/>
<enum value='113' name='kCFSOCKS4ErrorUnknownStatusCode'/>
<enum value='122' name='kCFSOCKS5ErrorBadCredentials'/>
<enum value='121' name='kCFSOCKS5ErrorBadResponseAddr'/>
<enum value='120' name='kCFSOCKS5ErrorBadState'/>
<enum value='124' name='kCFSOCKS5ErrorNoAcceptableMethod'/>
<enum value='123' name='kCFSOCKS5ErrorUnsupportedNegotiationMethod'/>
<enum value='100' name='kCFSOCKSErrorUnknownClientVersion'/>
<enum value='101' name='kCFSOCKSErrorUnsupportedServerVersion'/>
<enum value='-1002' name='kCFStreamErrorHTTPAuthenticationBadPassword'/>
<enum value='-1001' name='kCFStreamErrorHTTPAuthenticationBadUserName'/>
<enum value='-1000' name='kCFStreamErrorHTTPAuthenticationTypeUnsupported'/>
<enum value='-3' name='kCFStreamErrorHTTPBadURL'/>
<enum value='-1' name='kCFStreamErrorHTTPParseFailure'/>
<enum value='-2' name='kCFStreamErrorHTTPRedirectionLoop'/>
<enum value='311' name='kCFStreamErrorHTTPSProxyFailureUnexpectedResponseToCONNECTMethod'/>
<enum value='93' name='kCFStreamErrorSOCKS4IdConflict'/>
<enum value='92' name='kCFStreamErrorSOCKS4IdentdFailed'/>
<enum value='91' name='kCFStreamErrorSOCKS4RequestFailed'/>
<enum value='2' name='kCFStreamErrorSOCKS4SubDomainResponse'/>
<enum value='1' name='kCFStreamErrorSOCKS5BadResponseAddr'/>
<enum value='2' name='kCFStreamErrorSOCKS5BadState'/>
<enum value='4' name='kCFStreamErrorSOCKS5SubDomainMethod'/>
<enum value='5' name='kCFStreamErrorSOCKS5SubDomainResponse'/>
<enum value='3' name='kCFStreamErrorSOCKS5SubDomainUserPass'/>
<enum value='0' name='kCFStreamErrorSOCKSSubDomainNone'/>
<enum value='1' name='kCFStreamErrorSOCKSSubDomainVersionCode'/>
<enum value='3' name='kCFStreamErrorSOCKSUnknownClientVersion'/>
<enum value='0' name='kCFStreamSocketSecurityNone'/>
<enum value='1' name='kCFStreamSocketSecuritySSLv2'/>
<enum value='3' name='kCFStreamSocketSecuritySSLv23'/>
<enum value='2' name='kCFStreamSocketSecuritySSLv3'/>
<enum value='4' name='kCFStreamSocketSecurityTLSv1'/>
<enum value='-1011' name='kCFURLErrorBadServerResponse'/>
<enum value='-1000' name='kCFURLErrorBadURL'/>
<enum value='-1019' name='kCFURLErrorCallIsActive'/>
<enum value='-999' name='kCFURLErrorCancelled'/>
<enum value='-3002' name='kCFURLErrorCannotCloseFile'/>
<enum value='-1004' name='kCFURLErrorCannotConnectToHost'/>
<enum value='-3000' name='kCFURLErrorCannotCreateFile'/>
<enum value='-1016' name='kCFURLErrorCannotDecodeContentData'/>
<enum value='-1015' name='kCFURLErrorCannotDecodeRawData'/>
<enum value='-1003' name='kCFURLErrorCannotFindHost'/>
<enum value='-2000' name='kCFURLErrorCannotLoadFromNetwork'/>
<enum value='-3005' name='kCFURLErrorCannotMoveFile'/>
<enum value='-3001' name='kCFURLErrorCannotOpenFile'/>
<enum value='-1017' name='kCFURLErrorCannotParseResponse'/>
<enum value='-3004' name='kCFURLErrorCannotRemoveFile'/>
<enum value='-3003' name='kCFURLErrorCannotWriteToFile'/>
<enum value='-1205' name='kCFURLErrorClientCertificateRejected'/>
<enum value='-1206' name='kCFURLErrorClientCertificateRequired'/>
<enum value='-1006' name='kCFURLErrorDNSLookupFailed'/>
<enum value='-1103' name='kCFURLErrorDataLengthExceedsMaximum'/>
<enum value='-1020' name='kCFURLErrorDataNotAllowed'/>
<enum value='-3006' name='kCFURLErrorDownloadDecodingFailedMidStream'/>
<enum value='-3007' name='kCFURLErrorDownloadDecodingFailedToComplete'/>
<enum value='-1100' name='kCFURLErrorFileDoesNotExist'/>
<enum value='-1101' name='kCFURLErrorFileIsDirectory'/>
<enum value='-1007' name='kCFURLErrorHTTPTooManyRedirects'/>
<enum value='-1018' name='kCFURLErrorInternationalRoamingOff'/>
<enum value='-1005' name='kCFURLErrorNetworkConnectionLost'/>
<enum value='-1102' name='kCFURLErrorNoPermissionsToReadFile'/>
<enum value='-1009' name='kCFURLErrorNotConnectedToInternet'/>
<enum value='-1010' name='kCFURLErrorRedirectToNonExistentLocation'/>
<enum value='-1021' name='kCFURLErrorRequestBodyStreamExhausted'/>
<enum value='-1008' name='kCFURLErrorResourceUnavailable'/>
<enum value='-1200' name='kCFURLErrorSecureConnectionFailed'/>
<enum value='-1201' name='kCFURLErrorServerCertificateHasBadDate'/>
<enum value='-1203' name='kCFURLErrorServerCertificateHasUnknownRoot'/>
<enum value='-1204' name='kCFURLErrorServerCertificateNotYetValid'/>
<enum value='-1202' name='kCFURLErrorServerCertificateUntrusted'/>
<enum value='-1001' name='kCFURLErrorTimedOut'/>
<enum value='-998' name='kCFURLErrorUnknown'/>
<enum value='-1002' name='kCFURLErrorUnsupportedURL'/>
<enum value='-1013' name='kCFURLErrorUserAuthenticationRequired'/>
<enum value='-1012' name='kCFURLErrorUserCancelledAuthentication'/>
<enum value='-1014' name='kCFURLErrorZeroByteResource'/>
<enum value='255' name='kSOCKS5NoAcceptableMethod'/>
<function name='CFFTPCreateParsedResourceListing'>
<arg type='^{__CFAllocator=}'/>
<arg type='*'/>
<arg type64='q' type='l'/>
<arg type='^^{__CFDictionary}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFHTTPAuthenticationAppliesToRequest'>
<arg type='^{_CFHTTPAuthentication=}'/>
<arg type='^{__CFHTTPMessage=}'/>
<retval type='B'/>
</function>
<function name='CFHTTPAuthenticationCopyDomains'>
<arg type='^{_CFHTTPAuthentication=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFHTTPAuthenticationCopyMethod'>
<arg type='^{_CFHTTPAuthentication=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFHTTPAuthenticationCopyRealm'>
<arg type='^{_CFHTTPAuthentication=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFHTTPAuthenticationCreateFromResponse'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFHTTPMessage=}'/>
<retval already_retained='true' type='^{_CFHTTPAuthentication=}'/>
</function>
<function name='CFHTTPAuthenticationGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFHTTPAuthenticationIsValid'>
<arg type='^{_CFHTTPAuthentication=}'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<retval type='B'/>
</function>
<function name='CFHTTPAuthenticationRequiresAccountDomain'>
<arg type='^{_CFHTTPAuthentication=}'/>
<retval type='B'/>
</function>
<function name='CFHTTPAuthenticationRequiresOrderedRequests'>
<arg type='^{_CFHTTPAuthentication=}'/>
<retval type='B'/>
</function>
<function name='CFHTTPAuthenticationRequiresUserNameAndPassword'>
<arg type='^{_CFHTTPAuthentication=}'/>
<retval type='B'/>
</function>
<function name='CFHTTPMessageAddAuthentication'>
<arg type='^{__CFHTTPMessage=}'/>
<arg type='^{__CFHTTPMessage=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='B'/>
<retval type='B'/>
</function>
<function name='CFHTTPMessageAppendBytes'>
<arg type='^{__CFHTTPMessage=}'/>
<arg type='*'/>
<arg type64='q' type='l'/>
<retval type='B'/>
</function>
<function name='CFHTTPMessageApplyCredentialDictionary'>
<arg type='^{__CFHTTPMessage=}'/>
<arg type='^{_CFHTTPAuthentication=}'/>
<arg type='^{__CFDictionary=}'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<retval type='B'/>
</function>
<function name='CFHTTPMessageApplyCredentials'>
<arg type='^{__CFHTTPMessage=}'/>
<arg type='^{_CFHTTPAuthentication=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<retval type='B'/>
</function>
<function name='CFHTTPMessageCopyAllHeaderFields'>
<arg type='^{__CFHTTPMessage=}'/>
<retval already_retained='true' type='^{__CFDictionary=}'/>
</function>
<function name='CFHTTPMessageCopyBody'>
<arg type='^{__CFHTTPMessage=}'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFHTTPMessageCopyHeaderFieldValue'>
<arg type='^{__CFHTTPMessage=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFHTTPMessageCopyRequestMethod'>
<arg type='^{__CFHTTPMessage=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFHTTPMessageCopyRequestURL'>
<arg type='^{__CFHTTPMessage=}'/>
<retval already_retained='true' type='^{__CFURL=}'/>
</function>
<function name='CFHTTPMessageCopyResponseStatusLine'>
<arg type='^{__CFHTTPMessage=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFHTTPMessageCopySerializedMessage'>
<arg type='^{__CFHTTPMessage=}'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFHTTPMessageCopyVersion'>
<arg type='^{__CFHTTPMessage=}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='CFHTTPMessageCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFHTTPMessage=}'/>
<retval already_retained='true' type='^{__CFHTTPMessage=}'/>
</function>
<function name='CFHTTPMessageCreateEmpty'>
<arg type='^{__CFAllocator=}'/>
<arg type='B'/>
<retval already_retained='true' type='^{__CFHTTPMessage=}'/>
</function>
<function name='CFHTTPMessageCreateRequest'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFHTTPMessage=}'/>
</function>
<function name='CFHTTPMessageCreateResponse'>
<arg type='^{__CFAllocator=}'/>
<arg type64='q' type='l'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFHTTPMessage=}'/>
</function>
<function name='CFHTTPMessageGetResponseStatusCode'>
<arg type='^{__CFHTTPMessage=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFHTTPMessageGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFHTTPMessageIsHeaderComplete'>
<arg type='^{__CFHTTPMessage=}'/>
<retval type='B'/>
</function>
<function name='CFHTTPMessageIsRequest'>
<arg type='^{__CFHTTPMessage=}'/>
<retval type='B'/>
</function>
<function name='CFHTTPMessageSetBody'>
<arg type='^{__CFHTTPMessage=}'/>
<arg type='^{__CFData=}'/>
</function>
<function name='CFHTTPMessageSetHeaderFieldValue'>
<arg type='^{__CFHTTPMessage=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFHTTPReadStreamSetProxy'>
<arg type='^{__CFReadStream=}'/>
<arg type='^{__CFString=}'/>
<arg type64='q' type='l'/>
</function>
<function name='CFHTTPReadStreamSetRedirectsAutomatically'>
<arg type='^{__CFReadStream=}'/>
<arg type='B'/>
</function>
<function name='CFHostCancelInfoResolution'>
<arg type='^{__CFHost=}'/>
<arg type='i'/>
</function>
<function name='CFHostCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFHost=}'/>
<retval already_retained='true' type='^{__CFHost=}'/>
</function>
<function name='CFHostCreateWithAddress'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFData=}'/>
<retval already_retained='true' type='^{__CFHost=}'/>
</function>
<function name='CFHostCreateWithName'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<retval already_retained='true' type='^{__CFHost=}'/>
</function>
<function name='CFHostGetAddressing'>
<arg type='^{__CFHost=}'/>
<arg type='^B'/>
<retval type='^{__CFArray=}'/>
</function>
<function name='CFHostGetNames'>
<arg type='^{__CFHost=}'/>
<arg type='^B'/>
<retval type='^{__CFArray=}'/>
</function>
<function name='CFHostGetReachability'>
<arg type='^{__CFHost=}'/>
<arg type='^B'/>
<retval type='^{__CFData=}'/>
</function>
<function name='CFHostGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFHostScheduleWithRunLoop'>
<arg type='^{__CFHost=}'/>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFHostSetClient'>
<arg type='^{__CFHost=}'/>
<arg function_pointer='true' type='^?'>
<arg type='^{__CFHost=}'/>
<arg type='i'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type64='^{CFHostClientContext=q^v^?^?^?}' type='^{CFHostClientContext=i^v^?^?^?}'/>
<retval type='B'/>
</function>
<function name='CFHostStartInfoResolution'>
<arg type='^{__CFHost=}'/>
<arg type='i'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<retval type='B'/>
</function>
<function name='CFHostUnscheduleFromRunLoop'>
<arg type='^{__CFHost=}'/>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFNetDiagnosticCopyNetworkStatusPassively'>
<arg type='^{__CFNetDiagnostic=}'/>
<arg type='^^{__CFString}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFNetDiagnosticCreateWithStreams'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFReadStream=}'/>
<arg type='^{__CFWriteStream=}'/>
<retval already_retained='true' type='^{__CFNetDiagnostic=}'/>
</function>
<function name='CFNetDiagnosticCreateWithURL'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFNetDiagnostic=}'/>
</function>
<function name='CFNetDiagnosticDiagnoseProblemInteractively'>
<arg type='^{__CFNetDiagnostic=}'/>
<retval type64='q' type='l'/>
</function>
<function name='CFNetDiagnosticSetName'>
<arg type='^{__CFNetDiagnostic=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFNetServiceBrowserCreate'>
<arg type='^{__CFAllocator=}'/>
<arg function_pointer='true' type='^?'>
<arg type='^{__CFNetServiceBrowser=}'/>
<arg type64='Q' type='L'/>
<arg type='@'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type64='^{CFNetServiceClientContext=q^v^?^?^?}' type='^{CFNetServiceClientContext=i^v^?^?^?}'/>
<retval already_retained='true' type='^{__CFNetServiceBrowser=}'/>
</function>
<function name='CFNetServiceBrowserGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFNetServiceBrowserInvalidate'>
<arg type='^{__CFNetServiceBrowser=}'/>
</function>
<function name='CFNetServiceBrowserScheduleWithRunLoop'>
<arg type='^{__CFNetServiceBrowser=}'/>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFNetServiceBrowserSearchForDomains'>
<arg type='^{__CFNetServiceBrowser=}'/>
<arg type='B'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<retval type='B'/>
</function>
<function name='CFNetServiceBrowserSearchForServices'>
<arg type='^{__CFNetServiceBrowser=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<retval type='B'/>
</function>
<function name='CFNetServiceBrowserStopSearch'>
<arg type='^{__CFNetServiceBrowser=}'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
</function>
<function name='CFNetServiceBrowserUnscheduleFromRunLoop'>
<arg type='^{__CFNetServiceBrowser=}'/>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFNetServiceCancel'>
<arg type='^{__CFNetService=}'/>
</function>
<function name='CFNetServiceCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type64='i' type='l'/>
<retval already_retained='true' type='^{__CFNetService=}'/>
</function>
<function name='CFNetServiceCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFNetService=}'/>
<retval already_retained='true' type='^{__CFNetService=}'/>
</function>
<function name='CFNetServiceCreateDictionaryWithTXTData'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFData=}'/>
<retval already_retained='true' type='^{__CFDictionary=}'/>
</function>
<function name='CFNetServiceCreateTXTDataWithDictionary'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFDictionary=}'/>
<retval already_retained='true' type='^{__CFData=}'/>
</function>
<function name='CFNetServiceGetAddressing'>
<arg type='^{__CFNetService=}'/>
<retval type='^{__CFArray=}'/>
</function>
<function name='CFNetServiceGetDomain'>
<arg type='^{__CFNetService=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFNetServiceGetName'>
<arg type='^{__CFNetService=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFNetServiceGetPortNumber'>
<arg type='^{__CFNetService=}'/>
<retval type64='i' type='l'/>
</function>
<function name='CFNetServiceGetProtocolSpecificInformation'>
<arg type='^{__CFNetService=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFNetServiceGetTXTData'>
<arg type='^{__CFNetService=}'/>
<retval type='^{__CFData=}'/>
</function>
<function name='CFNetServiceGetTargetHost'>
<arg type='^{__CFNetService=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFNetServiceGetType'>
<arg type='^{__CFNetService=}'/>
<retval type='^{__CFString=}'/>
</function>
<function name='CFNetServiceGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFNetServiceMonitorCreate'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFNetService=}'/>
<arg function_pointer='true' type='^?'>
<arg type='^{__CFNetServiceMonitor=}'/>
<arg type='^{__CFNetService=}'/>
<arg type='i'/>
<arg type='^{__CFData=}'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type64='^{CFNetServiceClientContext=q^v^?^?^?}' type='^{CFNetServiceClientContext=i^v^?^?^?}'/>
<retval already_retained='true' type='^{__CFNetServiceMonitor=}'/>
</function>
<function name='CFNetServiceMonitorGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='CFNetServiceMonitorInvalidate'>
<arg type='^{__CFNetServiceMonitor=}'/>
</function>
<function name='CFNetServiceMonitorScheduleWithRunLoop'>
<arg type='^{__CFNetServiceMonitor=}'/>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFNetServiceMonitorStart'>
<arg type='^{__CFNetServiceMonitor=}'/>
<arg type='i'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<retval type='B'/>
</function>
<function name='CFNetServiceMonitorStop'>
<arg type='^{__CFNetServiceMonitor=}'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
</function>
<function name='CFNetServiceMonitorUnscheduleFromRunLoop'>
<arg type='^{__CFNetServiceMonitor=}'/>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFNetServiceRegister'>
<arg type='^{__CFNetService=}'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<retval type='B'/>
</function>
<function name='CFNetServiceRegisterWithOptions'>
<arg type='^{__CFNetService=}'/>
<arg type64='Q' type='L'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<retval type='B'/>
</function>
<function name='CFNetServiceResolve'>
<arg type='^{__CFNetService=}'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<retval type='B'/>
</function>
<function name='CFNetServiceResolveWithTimeout'>
<arg type='^{__CFNetService=}'/>
<arg type='d'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<retval type='B'/>
</function>
<function name='CFNetServiceScheduleWithRunLoop'>
<arg type='^{__CFNetService=}'/>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFNetServiceSetClient'>
<arg type='^{__CFNetService=}'/>
<arg function_pointer='true' type='^?'>
<arg type='^{__CFNetService=}'/>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type64='^{CFNetServiceClientContext=q^v^?^?^?}' type='^{CFNetServiceClientContext=i^v^?^?^?}'/>
<retval type='B'/>
</function>
<function name='CFNetServiceSetProtocolSpecificInformation'>
<arg type='^{__CFNetService=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFNetServiceSetTXTData'>
<arg type='^{__CFNetService=}'/>
<arg type='^{__CFData=}'/>
<retval type='B'/>
</function>
<function name='CFNetServiceUnscheduleFromRunLoop'>
<arg type='^{__CFNetService=}'/>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
</function>
<function name='CFNetworkCopyProxiesForAutoConfigurationScript'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^^{__CFError}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFNetworkCopyProxiesForURL'>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFDictionary=}'/>
<retval already_retained='true' type='^{__CFArray=}'/>
</function>
<function name='CFNetworkCopySystemProxySettings'>
<retval already_retained='true' type='^{__CFDictionary=}'/>
</function>
<function name='CFNetworkExecuteProxyAutoConfigurationScript'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFURL=}'/>
<arg function_pointer='true' type='^?'>
<arg type='^v'/>
<arg type='^{__CFArray=}'/>
<arg type='^{__CFError=}'/>
<retval type='v'/>
</arg>
<arg type64='^{_CFStreamClientContext=q^v^?^?^?}' type='^{_CFStreamClientContext=i^v^?^?^?}'/>
<retval type='^{__CFRunLoopSource=}'/>
</function>
<function name='CFNetworkExecuteProxyAutoConfigurationURL'>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFURL=}'/>
<arg function_pointer='true' type='^?'>
<arg type='^v'/>
<arg type='^{__CFArray=}'/>
<arg type='^{__CFError=}'/>
<retval type='v'/>
</arg>
<arg type64='^{_CFStreamClientContext=q^v^?^?^?}' type='^{_CFStreamClientContext=i^v^?^?^?}'/>
<retval type='^{__CFRunLoopSource=}'/>
</function>
<function name='CFReadStreamCreateForHTTPRequest'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFHTTPMessage=}'/>
<retval already_retained='true' type='^{__CFReadStream=}'/>
</function>
<function name='CFReadStreamCreateForStreamedHTTPRequest'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFHTTPMessage=}'/>
<arg type='^{__CFReadStream=}'/>
<retval already_retained='true' type='^{__CFReadStream=}'/>
</function>
<function name='CFReadStreamCreateWithFTPURL'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFReadStream=}'/>
</function>
<function name='CFSocketStreamPairSetSecurityProtocol'>
<arg type='^{__CFReadStream=}'/>
<arg type='^{__CFWriteStream=}'/>
<arg type='i'/>
<retval type='B'/>
</function>
<function name='CFSocketStreamSOCKSGetError' inline='true'>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<retval type64='i' type='l'/>
</function>
<function name='CFSocketStreamSOCKSGetErrorSubdomain' inline='true'>
<arg type64='^{_CFStreamError=qi}' type='^{_CFStreamError=ii}'/>
<retval type64='i' type='l'/>
</function>
<function name='CFStreamCreatePairWithSocketToCFHost'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFHost=}'/>
<arg type64='i' type='l'/>
<arg type='^^{__CFReadStream}'/>
<arg type='^^{__CFWriteStream}'/>
</function>
<function name='CFStreamCreatePairWithSocketToNetService'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFNetService=}'/>
<arg type='^^{__CFReadStream}'/>
<arg type='^^{__CFWriteStream}'/>
</function>
<function name='CFWriteStreamCreateWithFTPURL'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__CFURL=}'/>
<retval already_retained='true' type='^{__CFWriteStream=}'/>
</function>
</signatures>
